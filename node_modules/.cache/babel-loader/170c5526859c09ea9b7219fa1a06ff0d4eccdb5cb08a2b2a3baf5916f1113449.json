{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: 'https://fucklaravel.ru/api',\n  headers: {\n    'Content-Type': 'application/json' // Говорит серверу, что мы отправляем JSON\n  }\n});\n\n// Перехватчик для токена\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('authToken');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`; // Добавляет токен в заголовки\n  }\n  return config;\n}, error => Promise.reject(error));\n\n// Auth\nexport const login = (email, password) => {\n  return api.post('/access-token', {\n    email,\n    password\n  });\n};\nexport const register = (name, email, password) => {\n  return api.post('/usercus', {\n    name,\n    email,\n    password\n  });\n};\n\n// Courses\nexport const fetchCourses = () => api.get('/courses');\nexport const createCourse = data => {\n  return api.post('/courses', {\n    title: data.title,\n    description: data.description,\n    price: data.price,\n    is_active: data.is_active,\n    is_subscription_based: data.is_subscription_based\n  });\n};\nexport const updateCourse = (id, data) => api.put(`/courses/${id}`, data);\nexport const deleteCourse = id => api.delete(`/courses/${id}`);\n\n// Subscriptions\nexport const fetchSubscriptions = () => api.get('/subscriptions');\nexport const createSubscription = data => api.post('/subscriptions', data);\nexport const updateSubscription = (id, data) => api.put(`/subscriptions/${id}`, data);\nexport const deleteSubscription = id => api.delete(`/subscriptions/${id}`);\n\n// Articles\nexport const fetchArticles = () => api.get('/articles');\nexport const createArticle = data => api.post('/articles', data);\nexport const updateArticle = (id, data) => api.put(`/articles/${id}`, data);\nexport const deleteArticle = id => api.delete(`/articles/${id}`);\n\n// User\nexport const fetchUserData = () => api.get('/myid');\nexport const updateUserData = data => api.put('/myid', data);\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","login","email","password","post","register","name","fetchCourses","get","createCourse","data","title","description","price","is_active","is_subscription_based","updateCourse","id","put","deleteCourse","delete","fetchSubscriptions","createSubscription","updateSubscription","deleteSubscription","fetchArticles","createArticle","updateArticle","deleteArticle","fetchUserData","updateUserData"],"sources":["/Users/razex/react-frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst api = axios.create({\n    baseURL: 'https://fucklaravel.ru/api',\n    headers: {\n        'Content-Type': 'application/json', // Говорит серверу, что мы отправляем JSON\n    },\n});\n\n\n// Перехватчик для токена\napi.interceptors.request.use(\n    (config) => {\n        const token = localStorage.getItem('authToken');\n        if (token) {\n            config.headers.Authorization = `Bearer ${token}`; // Добавляет токен в заголовки\n        }\n        return config;\n    },\n    (error) => Promise.reject(error)\n);\n\n\n\n// Auth\nexport const login = (email, password) => {\n    return api.post('/access-token', { email, password });\n};\n\nexport const register = (name, email, password) => {\n    return api.post('/usercus', { name, email, password });\n};\n\n// Courses\nexport const fetchCourses = () => api.get('/courses');\nexport const createCourse = (data) => {\n    return api.post('/courses', {\n        title: data.title,\n        description: data.description,\n        price: data.price,\n        is_active: data.is_active,\n        is_subscription_based: data.is_subscription_based,\n    });\n};\nexport const updateCourse = (id, data) => api.put(`/courses/${id}`, data);\nexport const deleteCourse = (id) => api.delete(`/courses/${id}`);\n\n// Subscriptions\nexport const fetchSubscriptions = () => api.get('/subscriptions');\nexport const createSubscription = (data) => api.post('/subscriptions', data);\nexport const updateSubscription = (id, data) => api.put(`/subscriptions/${id}`, data);\nexport const deleteSubscription = (id) => api.delete(`/subscriptions/${id}`);\n\n// Articles\nexport const fetchArticles = () => api.get('/articles');\nexport const createArticle = (data) => api.post('/articles', data);\nexport const updateArticle = (id, data) => api.put(`/articles/${id}`, data);\nexport const deleteArticle = (id) => api.delete(`/articles/${id}`);\n\n// User\nexport const fetchUserData = () => api.get('/myid');\nexport const updateUserData = (data) => api.put('/myid', data);\n\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}