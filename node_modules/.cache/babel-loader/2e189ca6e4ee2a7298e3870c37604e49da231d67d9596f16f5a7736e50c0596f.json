{"ast":null,"code":"var _jsxFileName = \"/Users/razex/react-frontend/src/pages/AdminPanel.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport api from '../services/api';\nimport Modal from '../components/Modal';\nimport '../styles/AdminPanel.css';\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AdminPanel() {\n  _s();\n  const [data, setData] = useState({\n    users: [],\n    courses: [],\n    articles: [],\n    subscriptions: [],\n    subscriptionTypes: []\n  });\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [isModalOpen, setModalOpen] = useState(false);\n  const [currentEdit, setCurrentEdit] = useState(null);\n  const [editData, setEditData] = useState({});\n  const [isAdding, setIsAdding] = useState(false);\n  const [subscriptionOptions, setSubscriptionOptions] = useState([]);\n  const navigate = useNavigate();\n  const templates = {\n    users: {\n      name: '',\n      email: '',\n      password: '',\n      is_active: true\n    },\n    courses: {\n      title: '',\n      description: '',\n      price: 0,\n      is_active: true,\n      subscription_name: ''\n    },\n    articles: {\n      course_id: '',\n      title: '',\n      content: ''\n    },\n    subscriptions: {\n      user_id: '',\n      subscription_type_id: '',\n      start_date: '',\n      end_date: ''\n    },\n    subscriptionTypes: {\n      name: '',\n      description: '',\n      price: 0,\n      is_active: false\n    }\n  };\n  const fieldTranslations = {\n    users: {\n      name: 'Имя',\n      email: 'Электронная почта',\n      password: 'Пароль',\n      is_active: 'Активен'\n    },\n    courses: {\n      title: 'Название',\n      description: 'Описание',\n      price: 'Цена',\n      is_active: 'Активен',\n      subscription_name: 'Подписка'\n    },\n    articles: {\n      course_id: 'ID курса',\n      title: 'Название',\n      content: 'Содержание'\n    },\n    subscriptions: {\n      user_id: 'ID пользователя',\n      subscription_type_id: 'ID типа подписки',\n      start_date: 'Дата начала',\n      end_date: 'Дата окончания'\n    },\n    subscriptionTypes: {\n      name: 'Название',\n      description: 'Описание',\n      price: 'Цена',\n      is_active: 'Активен'\n    }\n  };\n  const endpoints = {\n    users: '/usercus',\n    courses: '/courses',\n    articles: '/articles',\n    subscriptions: '/subscriptions',\n    subscriptionTypes: '/subscription-types'\n  };\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const responses = await Promise.all(Object.entries(endpoints).map(([key, endpoint]) => api.get(endpoint)));\n        const newData = responses.reduce((acc, res, idx) => {\n          const key = Object.keys(endpoints)[idx];\n          acc[key] = res.data;\n          return acc;\n        }, {});\n        setData(newData);\n\n        // Устанавливаем список подписок\n        setSubscriptionOptions(newData.subscriptionTypes || []);\n      } catch (err) {\n        setError('Не удалось загрузить данные админ-панели');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  const logout = () => {\n    localStorage.removeItem('authToken');\n    navigate('/login');\n  };\n  const handleAdd = key => {\n    setIsAdding(true);\n    setCurrentEdit(key);\n    setEditData({\n      ...templates[key]\n    });\n    setModalOpen(true);\n  };\n  const handleEdit = (key, item) => {\n    setIsAdding(false);\n    setCurrentEdit(key);\n    setEditData({\n      ...item\n    });\n    setModalOpen(true);\n  };\n  const handleDelete = async (key, id) => {\n    try {\n      await api.delete(`${endpoints[key]}/${id}`);\n      setData(prev => ({\n        ...prev,\n        [key]: prev[key].filter(item => item.id !== id)\n      }));\n    } catch (err) {\n      alert('Не удалось удалить элемент');\n    }\n  };\n  const handleSave = async () => {\n    try {\n      const endpoint = endpoints[currentEdit];\n\n      // Определяем ID подписки на основе имени\n      if (currentEdit === 'courses' && editData.subscription_name) {\n        const subscription = subscriptionOptions.find(sub => sub.name === editData.subscription_name);\n        if (subscription) {\n          editData.subscription_id = subscription.id;\n        } else {\n          alert('Подписка с таким названием не найдена');\n          return;\n        }\n      } else {\n        delete editData.subscription_id;\n      }\n      if (isAdding) {\n        await api.post(endpoint, editData);\n        alert('Элемент успешно добавлен');\n      } else {\n        await api.put(`${endpoint}/${editData.id}`, editData);\n        alert('Изменения успешно сохранены');\n      }\n\n      // Обновляем список после сохранения\n      const updatedData = await api.get(endpoint);\n      setData(prev => ({\n        ...prev,\n        [currentEdit]: updatedData.data\n      }));\n    } catch (err) {\n      alert('Не удалось сохранить изменения');\n    } finally {\n      setModalOpen(false);\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-panel-container\",\n    children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-panel-container\",\n    children: [\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-panel-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u0410\\u0434\\u043C\\u0438\\u043D-\\u043F\\u0430\\u043D\\u0435\\u043B\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: logout,\n      className: \"logout-button\",\n      children: \"\\u0412\\u044B\\u0439\\u0442\\u0438 \\u0438\\u0437 \\u0430\\u043A\\u043A\\u0430\\u0443\\u043D\\u0442\\u0430\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }, this), Object.entries(data).map(([key, items]) => /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"admin-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: {\n          users: 'Пользователи',\n          courses: 'Курсы',\n          articles: 'Статьи',\n          subscriptions: 'Подписки',\n          subscriptionTypes: 'Типы подписок'\n        }[key]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"admin-add-button\",\n        onClick: () => handleAdd(key),\n        children: [\"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \", {\n          users: 'пользователя',\n          courses: 'курс',\n          articles: 'статью',\n          subscriptions: 'подписку',\n          subscriptionTypes: 'тип подписки'\n        }[key]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"admin-list\",\n        children: items.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"admin-list-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [item.name || item.title || item.email || 'Новый элемент', \" - \", item.description || item.price || '']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"admin-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"admin-edit-button\",\n              onClick: () => handleEdit(key, item),\n              children: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"admin-delete-button\",\n              onClick: () => handleDelete(key, item.id),\n              children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 33\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 21\n      }, this)]\n    }, key, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isModalOpen,\n      onClose: () => setModalOpen(false),\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: isAdding ? `Добавить ${{\n          users: 'пользователя',\n          courses: 'курс',\n          articles: 'статью',\n          subscriptions: 'подписку',\n          subscriptionTypes: 'тип подписки'\n        }[currentEdit]}` : `Редактировать ${{\n          users: 'пользователя',\n          courses: 'курс',\n          articles: 'статью',\n          subscriptions: 'подписку',\n          subscriptionTypes: 'тип подписки'\n        }[currentEdit]}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }, this), editData && Object.keys(editData).map(field => {\n        var _fieldTranslations$cu;\n        return /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"modal-input-label\",\n          children: [((_fieldTranslations$cu = fieldTranslations[currentEdit]) === null || _fieldTranslations$cu === void 0 ? void 0 : _fieldTranslations$cu[field]) || field, \":\", field === 'subscription_name' ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              list: \"subscription-options\",\n              name: \"subscription_name\",\n              value: editData[field] || '',\n              onChange: e => {\n                const {\n                  name,\n                  value\n                } = e.target;\n                setEditData(prev => ({\n                  ...prev,\n                  [name]: value\n                }));\n              },\n              className: \"modal-input\",\n              placeholder: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0438\\u043B\\u0438 \\u0432\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043F\\u043E\\u0434\\u043F\\u0438\\u0441\\u043A\\u0443\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n              id: \"subscription-options\",\n              children: subscriptionOptions.length > 0 ? subscriptionOptions.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: option.name\n              }, option.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 49\n              }, this)) : /*#__PURE__*/_jsxDEV(\"option\", {\n                disabled: true,\n                children: \"\\u041F\\u043E\\u0434\\u043F\\u0438\\u0441\\u043E\\u043A \\u043D\\u0435\\u0442\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n            type: typeof editData[field] === 'boolean' ? 'checkbox' : field.includes('date') ? 'date' : 'text',\n            name: field,\n            value: typeof editData[field] === 'boolean' ? undefined : editData[field],\n            checked: typeof editData[field] === 'boolean' ? editData[field] : undefined,\n            onChange: e => {\n              const {\n                name,\n                value,\n                type,\n                checked\n              } = e.target;\n              setEditData(prev => ({\n                ...prev,\n                [name]: type === 'checkbox' ? checked : value\n              }));\n            },\n            className: \"modal-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 33\n          }, this)]\n        }, field, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 25\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"modal-save-button\",\n        onClick: handleSave,\n        children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 9\n  }, this);\n}\n_s(AdminPanel, \"4vh/rnoEFuqEH9F4P5f2t0UVvXQ=\", false, function () {\n  return [useNavigate];\n});\n_c = AdminPanel;\nexport default AdminPanel;\nvar _c;\n$RefreshReg$(_c, \"AdminPanel\");","map":{"version":3,"names":["React","useEffect","useState","api","Modal","useNavigate","jsxDEV","_jsxDEV","AdminPanel","_s","data","setData","users","courses","articles","subscriptions","subscriptionTypes","loading","setLoading","error","setError","isModalOpen","setModalOpen","currentEdit","setCurrentEdit","editData","setEditData","isAdding","setIsAdding","subscriptionOptions","setSubscriptionOptions","navigate","templates","name","email","password","is_active","title","description","price","subscription_name","course_id","content","user_id","subscription_type_id","start_date","end_date","fieldTranslations","endpoints","fetchData","responses","Promise","all","Object","entries","map","key","endpoint","get","newData","reduce","acc","res","idx","keys","err","logout","localStorage","removeItem","handleAdd","handleEdit","item","handleDelete","id","delete","prev","filter","alert","handleSave","subscription","find","sub","subscription_id","post","put","updatedData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","items","isOpen","onClose","field","_fieldTranslations$cu","list","value","onChange","e","target","placeholder","length","option","disabled","type","includes","undefined","checked","_c","$RefreshReg$"],"sources":["/Users/razex/react-frontend/src/pages/AdminPanel.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport api from '../services/api';\nimport Modal from '../components/Modal';\nimport '../styles/AdminPanel.css';\nimport { useNavigate } from \"react-router-dom\";\n\nfunction AdminPanel() {\n    const [data, setData] = useState({\n        users: [],\n        courses: [],\n        articles: [],\n        subscriptions: [],\n        subscriptionTypes: [],\n    });\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n\n    const [isModalOpen, setModalOpen] = useState(false);\n    const [currentEdit, setCurrentEdit] = useState(null);\n    const [editData, setEditData] = useState({});\n    const [isAdding, setIsAdding] = useState(false);\n    const [subscriptionOptions, setSubscriptionOptions] = useState([]);\n    const navigate = useNavigate();\n\n    const templates = {\n        users: { name: '', email: '', password: '', is_active: true },\n        courses: { title: '', description: '', price: 0, is_active: true, subscription_name: '' },\n        articles: { course_id: '', title: '', content: '' },\n        subscriptions: { user_id: '', subscription_type_id: '', start_date: '', end_date: '' },\n        subscriptionTypes: { name: '', description: '', price: 0, is_active: false },\n    };\n\n    const fieldTranslations = {\n        users: { name: 'Имя', email: 'Электронная почта', password: 'Пароль', is_active: 'Активен' },\n        courses: { title: 'Название', description: 'Описание', price: 'Цена', is_active: 'Активен', subscription_name: 'Подписка' },\n        articles: { course_id: 'ID курса', title: 'Название', content: 'Содержание' },\n        subscriptions: { user_id: 'ID пользователя', subscription_type_id: 'ID типа подписки', start_date: 'Дата начала', end_date: 'Дата окончания' },\n        subscriptionTypes: { name: 'Название', description: 'Описание', price: 'Цена', is_active: 'Активен' },\n    };\n\n    const endpoints = {\n        users: '/usercus',\n        courses: '/courses',\n        articles: '/articles',\n        subscriptions: '/subscriptions',\n        subscriptionTypes: '/subscription-types',\n    };\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const responses = await Promise.all(\n                    Object.entries(endpoints).map(([key, endpoint]) => api.get(endpoint))\n                );\n                const newData = responses.reduce((acc, res, idx) => {\n                    const key = Object.keys(endpoints)[idx];\n                    acc[key] = res.data;\n                    return acc;\n                }, {});\n                setData(newData);\n\n                // Устанавливаем список подписок\n                setSubscriptionOptions(newData.subscriptionTypes || []);\n            } catch (err) {\n                setError('Не удалось загрузить данные админ-панели');\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        fetchData();\n    }, []);\n\n    const logout = () => {\n        localStorage.removeItem('authToken');\n        navigate('/login');\n    };\n\n    const handleAdd = (key) => {\n        setIsAdding(true);\n        setCurrentEdit(key);\n        setEditData({ ...templates[key] });\n        setModalOpen(true);\n    };\n\n    const handleEdit = (key, item) => {\n        setIsAdding(false);\n        setCurrentEdit(key);\n        setEditData({ ...item });\n        setModalOpen(true);\n    };\n\n    const handleDelete = async (key, id) => {\n        try {\n            await api.delete(`${endpoints[key]}/${id}`);\n            setData((prev) => ({\n                ...prev,\n                [key]: prev[key].filter((item) => item.id !== id),\n            }));\n        } catch (err) {\n            alert('Не удалось удалить элемент');\n        }\n    };\n\n    const handleSave = async () => {\n        try {\n            const endpoint = endpoints[currentEdit];\n\n            // Определяем ID подписки на основе имени\n            if (currentEdit === 'courses' && editData.subscription_name) {\n                const subscription = subscriptionOptions.find(\n                    (sub) => sub.name === editData.subscription_name\n                );\n                if (subscription) {\n                    editData.subscription_id = subscription.id;\n                } else {\n                    alert('Подписка с таким названием не найдена');\n                    return;\n                }\n            } else {\n                delete editData.subscription_id;\n            }\n\n            if (isAdding) {\n                await api.post(endpoint, editData);\n                alert('Элемент успешно добавлен');\n            } else {\n                await api.put(`${endpoint}/${editData.id}`, editData);\n                alert('Изменения успешно сохранены');\n            }\n\n            // Обновляем список после сохранения\n            const updatedData = await api.get(endpoint);\n            setData((prev) => ({\n                ...prev,\n                [currentEdit]: updatedData.data,\n            }));\n        } catch (err) {\n            alert('Не удалось сохранить изменения');\n        } finally {\n            setModalOpen(false);\n        }\n    };\n\n    if (loading) return <div className=\"admin-panel-container\">Загрузка...</div>;\n    if (error) return <div className=\"admin-panel-container\">Ошибка: {error}</div>;\n\n    return (\n        <div className=\"admin-panel-container\">\n            <h1>Админ-панель</h1>\n            <button onClick={logout} className=\"logout-button\">Выйти из аккаунта</button>\n            {Object.entries(data).map(([key, items]) => (\n                <section key={key} className=\"admin-section\">\n                    <h2>\n                        {{\n                            users: 'Пользователи',\n                            courses: 'Курсы',\n                            articles: 'Статьи',\n                            subscriptions: 'Подписки',\n                            subscriptionTypes: 'Типы подписок',\n                        }[key]}\n                    </h2>\n                    <button\n                        className=\"admin-add-button\"\n                        onClick={() => handleAdd(key)}\n                    >\n                        Добавить {{\n                            users: 'пользователя',\n                            courses: 'курс',\n                            articles: 'статью',\n                            subscriptions: 'подписку',\n                            subscriptionTypes: 'тип подписки',\n                        }[key]}\n                    </button>\n                    <ul className=\"admin-list\">\n                        {items.map((item) => (\n                            <li key={item.id} className=\"admin-list-item\">\n                                <span>\n                                    {item.name || item.title || item.email || 'Новый элемент'} - {item.description || item.price || ''}\n                                </span>\n                                <div className=\"admin-buttons\">\n                                    <button\n                                        className=\"admin-edit-button\"\n                                        onClick={() => handleEdit(key, item)}\n                                    >\n                                        Редактировать\n                                    </button>\n                                    <button\n                                        className=\"admin-delete-button\"\n                                        onClick={() => handleDelete(key, item.id)}\n                                    >\n                                        Удалить\n                                    </button>\n                                </div>\n                            </li>\n                        ))}\n                    </ul>\n                </section>\n            ))}\n\n            <Modal isOpen={isModalOpen} onClose={() => setModalOpen(false)}>\n                <h2>\n                    {isAdding\n                        ? `Добавить ${\n                              {\n                                  users: 'пользователя',\n                                  courses: 'курс',\n                                  articles: 'статью',\n                                  subscriptions: 'подписку',\n                                  subscriptionTypes: 'тип подписки',\n                              }[currentEdit]\n                          }`\n                        : `Редактировать ${\n                              {\n                                  users: 'пользователя',\n                                  courses: 'курс',\n                                  articles: 'статью',\n                                  subscriptions: 'подписку',\n                                  subscriptionTypes: 'тип подписки',\n                              }[currentEdit]\n                          }`}\n                </h2>\n                {editData &&\n                    Object.keys(editData).map((field) => (\n                        <label key={field} className=\"modal-input-label\">\n                            {fieldTranslations[currentEdit]?.[field] || field}:\n                            {field === 'subscription_name' ? (\n                                <div>\n                                    <input\n                                        list=\"subscription-options\"\n                                        name=\"subscription_name\"\n                                        value={editData[field] || ''}\n                                        onChange={(e) => {\n                                            const { name, value } = e.target;\n                                            setEditData((prev) => ({\n                                                ...prev,\n                                                [name]: value,\n                                            }));\n                                        }}\n                                        className=\"modal-input\"\n                                        placeholder=\"Выберите или введите подписку\"\n                                    />\n                                    <datalist id=\"subscription-options\">\n                                        {subscriptionOptions.length > 0 ? (\n                                            subscriptionOptions.map((option) => (\n                                                <option key={option.id} value={option.name} />\n                                            ))\n                                        ) : (\n                                            <option disabled>Подписок нет</option>\n                                        )}\n                                    </datalist>\n                                </div>\n                            ) : (\n                                <input\n                                    type={\n                                        typeof editData[field] === 'boolean'\n                                            ? 'checkbox'\n                                            : field.includes('date')\n                                            ? 'date'\n                                            : 'text'\n                                    }\n                                    name={field}\n                                    value={\n                                        typeof editData[field] === 'boolean' ? undefined : editData[field]\n                                    }\n                                    checked={\n                                        typeof editData[field] === 'boolean' ? editData[field] : undefined\n                                    }\n                                    onChange={(e) => {\n                                        const { name, value, type, checked } = e.target;\n                                        setEditData((prev) => ({\n                                            ...prev,\n                                            [name]: type === 'checkbox' ? checked : value,\n                                        }));\n                                    }}\n                                    className=\"modal-input\"\n                                />\n                            )}\n                        </label>\n                    ))}\n                <button className=\"modal-save-button\" onClick={handleSave}>\n                    Сохранить\n                </button>\n            </Modal>\n        </div>\n    );\n}\n\nexport default AdminPanel;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}