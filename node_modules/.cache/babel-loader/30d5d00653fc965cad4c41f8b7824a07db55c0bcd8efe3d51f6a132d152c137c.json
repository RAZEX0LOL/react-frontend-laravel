{"ast":null,"code":"var _jsxFileName = \"/Users/razex/react-frontend/src/pages/AdminPanel.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport api from '../services/api';\nimport Modal from '../components/Modal';\nimport '../styles/AdminPanel.css';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AdminPanel() {\n  _s();\n  const [data, setData] = useState({\n    users: [],\n    courses: [],\n    articles: [],\n    subscriptions: [],\n    subscriptionTypes: []\n  });\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [isModalOpen, setModalOpen] = useState(false);\n  const [currentEdit, setCurrentEdit] = useState(null);\n  const [editData, setEditData] = useState({});\n  const [isAdding, setIsAdding] = useState(false);\n  const navigate = useNavigate();\n  const templates = {\n    users: {\n      name: '',\n      email: '',\n      password: '',\n      is_active: true\n    },\n    courses: {\n      title: '',\n      description: '',\n      price: 0,\n      is_active: true,\n      subscription_type_names: []\n    },\n    articles: {\n      course_id: '',\n      title: '',\n      content: ''\n    },\n    subscriptions: {\n      user_name: '',\n      subscription_type_name: '',\n      start_date: '',\n      end_date: '',\n      status: 'Active'\n    },\n    subscriptionTypes: {\n      name: '',\n      description: '',\n      price: 0,\n      is_active: false\n    }\n  };\n  const fieldTranslations = {\n    users: {\n      name: 'Имя',\n      email: 'Электронная почта',\n      password: 'Пароль',\n      is_active: 'Активен'\n    },\n    courses: {\n      title: 'Название',\n      description: 'Описание',\n      price: 'Цена',\n      is_active: 'Активен',\n      subscription_type_names: 'Типы подписок'\n    },\n    articles: {\n      course_id: 'Курс',\n      title: 'Название статьи',\n      content: 'Содержание'\n    },\n    subscriptions: {\n      user_name: 'Пользователь',\n      subscription_type_name: 'Тип подписки',\n      start_date: 'Дата начала',\n      end_date: 'Дата окончания',\n      status: 'Статус'\n    },\n    subscriptionTypes: {\n      name: 'Название',\n      description: 'Описание',\n      price: 'Цена',\n      is_active: 'Активен'\n    }\n  };\n  const endpoints = {\n    users: '/usercus',\n    courses: '/courses',\n    articles: '/articles',\n    subscriptions: '/subscriptions',\n    subscriptionTypes: '/subscription-types'\n  };\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const responses = await Promise.all(Object.entries(endpoints).map(([key, endpoint]) => api.get(endpoint)));\n        const newData = responses.reduce((acc, res, idx) => {\n          const key = Object.keys(endpoints)[idx];\n          acc[key] = res.data;\n          return acc;\n        }, {});\n        setData(newData);\n      } catch (err) {\n        setError('Не удалось загрузить данные админ-панели');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  const logout = () => {\n    localStorage.removeItem('authToken');\n    navigate('/login');\n  };\n  const handleAdd = key => {\n    setIsAdding(true);\n    setCurrentEdit(key);\n    setEditData({\n      ...templates[key]\n    });\n    setModalOpen(true);\n  };\n  const handleEdit = (key, item) => {\n    setIsAdding(false);\n    setCurrentEdit(key);\n    setEditData({\n      ...item\n    });\n    setModalOpen(true);\n  };\n  const handleDelete = async (key, id) => {\n    try {\n      await api.delete(`${endpoints[key]}/${id}`);\n      const response = await api.get(endpoints[key]);\n      setData(prev => ({\n        ...prev,\n        [key]: response.data\n      }));\n    } catch (err) {\n      alert('Не удалось удалить элемент');\n    }\n  };\n  const handleSave = async () => {\n    try {\n      const endpoint = endpoints[currentEdit];\n      if (currentEdit === 'courses') {\n        const subscriptionTypes = data.subscriptionTypes.filter(s => editData.subscription_type_names.includes(s.name));\n        editData.subscription_type_ids = subscriptionTypes.map(s => s.id);\n        delete editData.subscription_type_names;\n      }\n      if (isAdding) {\n        await api.post(endpoint, editData);\n      } else {\n        await api.put(`${endpoint}/${editData.id}`, editData);\n      }\n      const response = await api.get(endpoint);\n      setData(prev => ({\n        ...prev,\n        [currentEdit]: response.data\n      }));\n      alert(isAdding ? 'Элемент успешно добавлен' : 'Изменения успешно сохранены');\n    } catch (err) {\n      alert('Не удалось сохранить изменения');\n    } finally {\n      setModalOpen(false);\n    }\n  };\n  const renderMultiSelectField = (field, options) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-multi-select-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0438\\u043B\\u0438 \\u0432\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0437\\u043D\\u0430\\u0447\\u0435\\u043D\\u0438\\u044F\",\n        onChange: e => {\n          const value = e.target.value.toLowerCase();\n          const filtered = options.filter(o => o.name.toLowerCase().includes(value));\n          setData(prev => ({\n            ...prev,\n            filteredOptions: filtered\n          }));\n        },\n        className: \"modal-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        multiple: true,\n        value: editData[field] || [],\n        onChange: e => {\n          const selectedOptions = Array.from(e.target.selectedOptions).map(option => option.value);\n          setEditData(prev => ({\n            ...prev,\n            [field]: selectedOptions\n          }));\n        },\n        className: \"modal-multi-select\",\n        children: options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: option.name,\n          children: option.name\n        }, option.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }, this);\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-panel-container\",\n    children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 190,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-panel-container\",\n    children: [\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 191,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-panel-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u0410\\u0434\\u043C\\u0438\\u043D-\\u043F\\u0430\\u043D\\u0435\\u043B\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: logout,\n      className: \"logout-button\",\n      children: \"\\u0412\\u044B\\u0439\\u0442\\u0438 \\u0438\\u0437 \\u0430\\u043A\\u043A\\u0430\\u0443\\u043D\\u0442\\u0430\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 13\n    }, this), Object.entries(data).map(([key, items]) => /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"admin-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: {\n          users: 'Пользователи',\n          courses: 'Курсы',\n          articles: 'Статьи',\n          subscriptions: 'Подписки',\n          subscriptionTypes: 'Типы подписок'\n        }[key]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"admin-add-button\",\n        onClick: () => handleAdd(key),\n        children: [\"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \", {\n          users: 'пользователя',\n          courses: 'курс',\n          articles: 'статью',\n          subscriptions: 'подписку',\n          subscriptionTypes: 'тип подписки'\n        }[key]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"admin-list\",\n        children: items.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"admin-list-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: {\n              users: item.name || item.email,\n              courses: item.title,\n              articles: `${item.course_id} - ${item.title}`,\n              subscriptions: `${item.user_id} - ${item.subscription_type_id} (${item.status})`,\n              subscriptionTypes: item.name\n            }[key] || 'Новый элемент'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"admin-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"admin-edit-button\",\n              onClick: () => handleEdit(key, item),\n              children: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"admin-delete-button\",\n              onClick: () => handleDelete(key, item.id),\n              children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 33\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 21\n      }, this)]\n    }, key, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isModalOpen,\n      onClose: () => setModalOpen(false),\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: isAdding ? `Добавить ${{\n          users: 'пользователя',\n          courses: 'курс',\n          articles: 'статью',\n          subscriptions: 'подписку',\n          subscriptionTypes: 'тип подписки'\n        }[currentEdit]}` : `Редактировать ${{\n          users: 'пользователя',\n          courses: 'курс',\n          articles: 'статью',\n          subscriptions: 'подписку',\n          subscriptionTypes: 'тип подписки'\n        }[currentEdit]}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 17\n      }, this), editData && Object.keys(editData).map(field => {\n        var _fieldTranslations$cu;\n        return /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"modal-input-label\",\n          children: [((_fieldTranslations$cu = fieldTranslations[currentEdit]) === null || _fieldTranslations$cu === void 0 ? void 0 : _fieldTranslations$cu[field]) || field, \":\", field === 'subscription_type_names' && currentEdit === 'courses' ? renderMultiSelectField(field, data.subscriptionTypes.map(s => ({\n            id: s.id,\n            name: s.name\n          }))) : field === 'is_active' && currentEdit === 'courses' ? /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: editData[field] || false,\n            onChange: e => setEditData(prev => ({\n              ...prev,\n              [field]: e.target.checked\n            })),\n            className: \"modal-checkbox\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n            type: field.includes('date') ? 'date' : 'text',\n            name: field,\n            value: editData[field] || '',\n            onChange: e => {\n              const {\n                name,\n                value\n              } = e.target;\n              setEditData(prev => ({\n                ...prev,\n                [name]: value\n              }));\n            },\n            className: \"modal-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 33\n          }, this)]\n        }, field, true, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 25\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"modal-save-button\",\n        onClick: handleSave,\n        children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 194,\n    columnNumber: 9\n  }, this);\n}\n_s(AdminPanel, \"cwLl9N5kSsSmyAIKTJhTDYUyOwI=\", false, function () {\n  return [useNavigate];\n});\n_c = AdminPanel;\nexport default AdminPanel;\nvar _c;\n$RefreshReg$(_c, \"AdminPanel\");","map":{"version":3,"names":["React","useEffect","useState","api","Modal","useNavigate","jsxDEV","_jsxDEV","AdminPanel","_s","data","setData","users","courses","articles","subscriptions","subscriptionTypes","loading","setLoading","error","setError","isModalOpen","setModalOpen","currentEdit","setCurrentEdit","editData","setEditData","isAdding","setIsAdding","navigate","templates","name","email","password","is_active","title","description","price","subscription_type_names","course_id","content","user_name","subscription_type_name","start_date","end_date","status","fieldTranslations","endpoints","fetchData","responses","Promise","all","Object","entries","map","key","endpoint","get","newData","reduce","acc","res","idx","keys","err","logout","localStorage","removeItem","handleAdd","handleEdit","item","handleDelete","id","delete","response","prev","alert","handleSave","filter","s","includes","subscription_type_ids","post","put","renderMultiSelectField","field","options","className","children","type","placeholder","onChange","e","value","target","toLowerCase","filtered","o","filteredOptions","fileName","_jsxFileName","lineNumber","columnNumber","multiple","selectedOptions","Array","from","option","onClick","items","user_id","subscription_type_id","isOpen","onClose","_fieldTranslations$cu","checked","_c","$RefreshReg$"],"sources":["/Users/razex/react-frontend/src/pages/AdminPanel.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport api from '../services/api';\nimport Modal from '../components/Modal';\nimport '../styles/AdminPanel.css';\nimport { useNavigate } from 'react-router-dom';\n\nfunction AdminPanel() {\n    const [data, setData] = useState({\n        users: [],\n        courses: [],\n        articles: [],\n        subscriptions: [],\n        subscriptionTypes: [],\n    });\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n\n    const [isModalOpen, setModalOpen] = useState(false);\n    const [currentEdit, setCurrentEdit] = useState(null);\n    const [editData, setEditData] = useState({});\n    const [isAdding, setIsAdding] = useState(false);\n    const navigate = useNavigate();\n\n    const templates = {\n        users: { name: '', email: '', password: '', is_active: true },\n        courses: { title: '', description: '', price: 0, is_active: true, subscription_type_names: [] },\n        articles: { course_id: '', title: '', content: '' },\n        subscriptions: {\n            user_name: '',\n            subscription_type_name: '',\n            start_date: '',\n            end_date: '',\n            status: 'Active',\n        },\n        subscriptionTypes: { name: '', description: '', price: 0, is_active: false },\n    };\n\n    const fieldTranslations = {\n        users: { name: 'Имя', email: 'Электронная почта', password: 'Пароль', is_active: 'Активен' },\n        courses: { title: 'Название', description: 'Описание', price: 'Цена', is_active: 'Активен', subscription_type_names: 'Типы подписок' },\n        articles: { course_id: 'Курс', title: 'Название статьи', content: 'Содержание' },\n        subscriptions: {\n            user_name: 'Пользователь',\n            subscription_type_name: 'Тип подписки',\n            start_date: 'Дата начала',\n            end_date: 'Дата окончания',\n            status: 'Статус',\n        },\n        subscriptionTypes: { name: 'Название', description: 'Описание', price: 'Цена', is_active: 'Активен' },\n    };\n\n    const endpoints = {\n        users: '/usercus',\n        courses: '/courses',\n        articles: '/articles',\n        subscriptions: '/subscriptions',\n        subscriptionTypes: '/subscription-types',\n    };\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const responses = await Promise.all(\n                    Object.entries(endpoints).map(([key, endpoint]) => api.get(endpoint))\n                );\n\n                const newData = responses.reduce((acc, res, idx) => {\n                    const key = Object.keys(endpoints)[idx];\n                    acc[key] = res.data;\n                    return acc;\n                }, {});\n\n                setData(newData);\n            } catch (err) {\n                setError('Не удалось загрузить данные админ-панели');\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        fetchData();\n    }, []);\n\n    const logout = () => {\n        localStorage.removeItem('authToken');\n        navigate('/login');\n    };\n\n    const handleAdd = (key) => {\n        setIsAdding(true);\n        setCurrentEdit(key);\n        setEditData({ ...templates[key] });\n        setModalOpen(true);\n    };\n\n    const handleEdit = (key, item) => {\n        setIsAdding(false);\n        setCurrentEdit(key);\n        setEditData({ ...item });\n        setModalOpen(true);\n    };\n\n    const handleDelete = async (key, id) => {\n        try {\n            await api.delete(`${endpoints[key]}/${id}`);\n            const response = await api.get(endpoints[key]);\n            setData((prev) => ({\n                ...prev,\n                [key]: response.data,\n            }));\n        } catch (err) {\n            alert('Не удалось удалить элемент');\n        }\n    };\n\n    const handleSave = async () => {\n        try {\n            const endpoint = endpoints[currentEdit];\n\n            if (currentEdit === 'courses') {\n                const subscriptionTypes = data.subscriptionTypes.filter((s) =>\n                    editData.subscription_type_names.includes(s.name)\n                );\n                editData.subscription_type_ids = subscriptionTypes.map((s) => s.id);\n                delete editData.subscription_type_names;\n            }\n\n            if (isAdding) {\n                await api.post(endpoint, editData);\n            } else {\n                await api.put(`${endpoint}/${editData.id}`, editData);\n            }\n\n            const response = await api.get(endpoint);\n            setData((prev) => ({\n                ...prev,\n                [currentEdit]: response.data,\n            }));\n\n            alert(isAdding ? 'Элемент успешно добавлен' : 'Изменения успешно сохранены');\n        } catch (err) {\n            alert('Не удалось сохранить изменения');\n        } finally {\n            setModalOpen(false);\n        }\n    };\n\n    const renderMultiSelectField = (field, options) => {\n        return (\n            <div className=\"modal-multi-select-container\">\n                <input\n                    type=\"text\"\n                    placeholder=\"Введите или выберите значения\"\n                    onChange={(e) => {\n                        const value = e.target.value.toLowerCase();\n                        const filtered = options.filter((o) =>\n                            o.name.toLowerCase().includes(value)\n                        );\n                        setData((prev) => ({\n                            ...prev,\n                            filteredOptions: filtered,\n                        }));\n                    }}\n                    className=\"modal-input\"\n                />\n                <select\n                    multiple\n                    value={editData[field] || []}\n                    onChange={(e) => {\n                        const selectedOptions = Array.from(e.target.selectedOptions).map(\n                            (option) => option.value\n                        );\n                        setEditData((prev) => ({\n                            ...prev,\n                            [field]: selectedOptions,\n                        }));\n                    }}\n                    className=\"modal-multi-select\"\n                >\n                    {options.map((option) => (\n                        <option key={option.id} value={option.name}>\n                            {option.name}\n                        </option>\n                    ))}\n                </select>\n            </div>\n        );\n    };\n\n    if (loading) return <div className=\"admin-panel-container\">Загрузка...</div>;\n    if (error) return <div className=\"admin-panel-container\">Ошибка: {error}</div>;\n\n    return (\n        <div className=\"admin-panel-container\">\n            <h1>Админ-панель</h1>\n            <button onClick={logout} className=\"logout-button\">Выйти из аккаунта</button>\n            {Object.entries(data).map(([key, items]) => (\n                <section key={key} className=\"admin-section\">\n                    <h2>\n                        {{\n                            users: 'Пользователи',\n                            courses: 'Курсы',\n                            articles: 'Статьи',\n                            subscriptions: 'Подписки',\n                            subscriptionTypes: 'Типы подписок',\n                        }[key]}\n                    </h2>\n                    <button\n                        className=\"admin-add-button\"\n                        onClick={() => handleAdd(key)}\n                    >\n                        Добавить {{\n                            users: 'пользователя',\n                            courses: 'курс',\n                            articles: 'статью',\n                            subscriptions: 'подписку',\n                            subscriptionTypes: 'тип подписки',\n                        }[key]}\n                    </button>\n                    <ul className=\"admin-list\">\n                        {items.map((item) => (\n                            <li key={item.id} className=\"admin-list-item\">\n                                <span>\n                                    {{\n                                        users: item.name || item.email,\n                                        courses: item.title,\n                                        articles: `${item.course_id} - ${item.title}`,\n                                        subscriptions: `${item.user_id} - ${item.subscription_type_id} (${item.status})`,\n                                        subscriptionTypes: item.name,\n                                    }[key] || 'Новый элемент'}\n                                </span>\n                                <div className=\"admin-buttons\">\n                                    <button\n                                        className=\"admin-edit-button\"\n                                        onClick={() => handleEdit(key, item)}\n                                    >\n                                        Редактировать\n                                    </button>\n                                    <button\n                                        className=\"admin-delete-button\"\n                                        onClick={() => handleDelete(key, item.id)}\n                                    >\n                                        Удалить\n                                    </button>\n                                </div>\n                            </li>\n                        ))}\n                    </ul>\n                </section>\n            ))}\n\n            <Modal isOpen={isModalOpen} onClose={() => setModalOpen(false)}>\n                <h2>\n                    {isAdding\n                        ? `Добавить ${\n                              {\n                                  users: 'пользователя',\n                                  courses: 'курс',\n                                  articles: 'статью',\n                                  subscriptions: 'подписку',\n                                  subscriptionTypes: 'тип подписки',\n                              }[currentEdit]\n                          }`\n                        : `Редактировать ${\n                              {\n                                  users: 'пользователя',\n                                  courses: 'курс',\n                                  articles: 'статью',\n                                  subscriptions: 'подписку',\n                                  subscriptionTypes: 'тип подписки',\n                              }[currentEdit]\n                          }`}\n                </h2>\n                {editData &&\n                    Object.keys(editData).map((field) => (\n                        <label key={field} className=\"modal-input-label\">\n                            {fieldTranslations[currentEdit]?.[field] || field}:\n                            {field === 'subscription_type_names' && currentEdit === 'courses' ? (\n                                renderMultiSelectField(\n                                    field,\n                                    data.subscriptionTypes.map((s) => ({\n                                        id: s.id,\n                                        name: s.name,\n                                    }))\n                                )\n                            ) : field === 'is_active' && currentEdit === 'courses' ? (\n                                <input\n                                    type=\"checkbox\"\n                                    checked={editData[field] || false}\n                                    onChange={(e) =>\n                                        setEditData((prev) => ({\n                                            ...prev,\n                                            [field]: e.target.checked,\n                                        }))\n                                    }\n                                    className=\"modal-checkbox\"\n                                />\n                            ) : (\n                                <input\n                                    type={field.includes('date') ? 'date' : 'text'}\n                                    name={field}\n                                    value={editData[field] || ''}\n                                    onChange={(e) => {\n                                        const { name, value } = e.target;\n                                        setEditData((prev) => ({\n                                            ...prev,\n                                            [name]: value,\n                                        }));\n                                    }}\n                                    className=\"modal-input\"\n                                />\n                            )}\n                        </label>\n                    ))}\n                <button className=\"modal-save-button\" onClick={handleSave}>\n                    Сохранить\n                </button>\n            </Modal>\n        </div>\n    );\n}\n\nexport default AdminPanel;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}