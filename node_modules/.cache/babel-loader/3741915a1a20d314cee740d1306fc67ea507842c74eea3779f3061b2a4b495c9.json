{"ast":null,"code":"var _jsxFileName = \"/Users/razex/react-frontend/src/pages/AdminPanel.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport api from '../services/api';\nimport Modal from '../components/Modal';\nimport '../styles/AdminPanel.css';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AdminPanel() {\n  _s();\n  const [data, setData] = useState({\n    users: [],\n    courses: [],\n    articles: [],\n    subscriptions: [],\n    subscriptionTypes: []\n  });\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [isModalOpen, setModalOpen] = useState(false);\n  const [currentEdit, setCurrentEdit] = useState(null);\n  const [editData, setEditData] = useState({});\n  const [isAdding, setIsAdding] = useState(false);\n  const navigate = useNavigate();\n  const templates = {\n    users: {\n      name: '',\n      email: '',\n      password: '',\n      is_active: true\n    },\n    courses: {\n      title: '',\n      description: '',\n      price: 0,\n      is_active: true,\n      subscription_type_name: ''\n    },\n    articles: {\n      course_name: '',\n      title: '',\n      content: ''\n    },\n    subscriptions: {\n      user_name: '',\n      subscription_type_name: '',\n      start_date: '',\n      end_date: '',\n      status: 'Active'\n    },\n    subscriptionTypes: {\n      name: '',\n      description: '',\n      price: 0,\n      is_active: false\n    }\n  };\n  const fieldTranslations = {\n    users: {\n      name: 'Имя',\n      email: 'Электронная почта',\n      password: 'Пароль',\n      is_active: 'Активен'\n    },\n    courses: {\n      title: 'Название',\n      description: 'Описание',\n      price: 'Цена',\n      is_active: 'Активен',\n      subscription_type_name: 'Тип подписки'\n    },\n    articles: {\n      course_name: 'Название курса',\n      title: 'Название статьи',\n      content: 'Содержание'\n    },\n    subscriptions: {\n      user_name: 'Пользователь',\n      subscription_type_name: 'Тип подписки',\n      start_date: 'Дата начала',\n      end_date: 'Дата окончания',\n      status: 'Статус'\n    },\n    subscriptionTypes: {\n      name: 'Название',\n      description: 'Описание',\n      price: 'Цена',\n      is_active: 'Активен'\n    }\n  };\n  const endpoints = {\n    users: '/usercus',\n    courses: '/courses',\n    articles: '/articles',\n    subscriptions: '/subscriptions',\n    subscriptionTypes: '/subscription-types'\n  };\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const responses = await Promise.all(Object.entries(endpoints).map(([key, endpoint]) => api.get(endpoint)));\n        const newData = responses.reduce((acc, res, idx) => {\n          const key = Object.keys(endpoints)[idx];\n          acc[key] = res.data;\n          return acc;\n        }, {});\n\n        // Replace course_id with course_name in articles\n        newData.articles = newData.articles.map(article => {\n          const course = newData.courses.find(c => c.id === article.course_id);\n          return {\n            ...article,\n            course_name: course ? course.title : 'Неизвестный курс'\n          };\n        });\n        setData(newData);\n      } catch (err) {\n        setError('Не удалось загрузить данные админ-панели');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  const logout = () => {\n    localStorage.removeItem('authToken');\n    navigate('/login');\n  };\n  const handleAdd = key => {\n    setIsAdding(true);\n    setCurrentEdit(key);\n    setEditData({\n      ...templates[key]\n    });\n    setModalOpen(true);\n  };\n  const handleEdit = (key, item) => {\n    setIsAdding(false);\n    setCurrentEdit(key);\n    setEditData({\n      ...item\n    });\n    setModalOpen(true);\n  };\n  const handleDelete = async (key, id) => {\n    try {\n      await api.delete(`${endpoints[key]}/${id}`);\n      const response = await api.get(endpoints[key]);\n      setData(prev => ({\n        ...prev,\n        [key]: response.data\n      }));\n    } catch (err) {\n      alert('Не удалось удалить элемент');\n    }\n  };\n  const handleSave = async () => {\n    try {\n      const endpoint = endpoints[currentEdit];\n      if (currentEdit === 'articles') {\n        const course = data.courses.find(c => c.title === editData.course_name);\n        if (course) editData.course_id = course.id;\n        delete editData.course_name;\n      }\n      if (isAdding) {\n        await api.post(endpoint, editData);\n      } else {\n        await api.put(`${endpoint}/${editData.id}`, editData);\n      }\n      const response = await api.get(endpoint);\n      setData(prev => ({\n        ...prev,\n        [currentEdit]: response.data\n      }));\n      alert(isAdding ? 'Элемент успешно добавлен' : 'Изменения успешно сохранены');\n    } catch (err) {\n      alert('Не удалось сохранить изменения');\n    } finally {\n      setModalOpen(false);\n    }\n  };\n  const renderSearchAndSelectField = (field, options) => {\n    const filteredOptions = options.filter(option => option.name.toLowerCase().includes((editData[field] || '').toLowerCase()));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-select-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: `Введите или выберите ${field === 'course_name' ? 'курс' : 'значение'}`,\n        value: editData[field] || '',\n        onChange: e => {\n          const {\n            value\n          } = e.target;\n          setEditData(prev => ({\n            ...prev,\n            [field]: value\n          }));\n        },\n        list: `list-${field}`,\n        className: \"modal-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n        id: `list-${field}`,\n        children: filteredOptions.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: option.name,\n          children: option.name\n        }, option.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }, this);\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-panel-container\",\n    children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 187,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-panel-container\",\n    children: [\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 188,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-panel-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u0410\\u0434\\u043C\\u0438\\u043D-\\u043F\\u0430\\u043D\\u0435\\u043B\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: logout,\n      className: \"logout-button\",\n      children: \"\\u0412\\u044B\\u0439\\u0442\\u0438 \\u0438\\u0437 \\u0430\\u043A\\u043A\\u0430\\u0443\\u043D\\u0442\\u0430\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }, this), Object.entries(data).map(([key, items]) => /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"admin-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: {\n          users: 'Пользователи',\n          courses: 'Курсы',\n          articles: 'Статьи',\n          subscriptions: 'Подписки',\n          subscriptionTypes: 'Типы подписок'\n        }[key]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"admin-add-button\",\n        onClick: () => handleAdd(key),\n        children: [\"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \", {\n          users: 'пользователя',\n          courses: 'курс',\n          articles: 'статью',\n          subscriptions: 'подписку',\n          subscriptionTypes: 'тип подписки'\n        }[key]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"admin-list\",\n        children: items.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"admin-list-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: {\n              users: item.name || item.email,\n              courses: item.title,\n              articles: `${item.course_name} - ${item.title}`,\n              subscriptions: `${item.user_name || item.user_id} - ${item.subscription_type_name || item.subscription_type_id} (${item.status})`,\n              subscriptionTypes: item.name\n            }[key] || 'Новый элемент'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"admin-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"admin-edit-button\",\n              onClick: () => handleEdit(key, item),\n              children: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"admin-delete-button\",\n              onClick: () => handleDelete(key, item.id),\n              children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 33\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 21\n      }, this)]\n    }, key, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isModalOpen,\n      onClose: () => setModalOpen(false),\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: isAdding ? `Добавить ${{\n          users: 'пользователя',\n          courses: 'курс',\n          articles: 'статью',\n          subscriptions: 'подписку',\n          subscriptionTypes: 'тип подписки'\n        }[currentEdit]}` : `Редактировать ${{\n          users: 'пользователя',\n          courses: 'курс',\n          articles: 'статью',\n          subscriptions: 'подписку',\n          subscriptionTypes: 'тип подписки'\n        }[currentEdit]}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 17\n      }, this), editData && Object.keys(editData).map(field => {\n        var _fieldTranslations$cu;\n        return /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"modal-input-label\",\n          children: [((_fieldTranslations$cu = fieldTranslations[currentEdit]) === null || _fieldTranslations$cu === void 0 ? void 0 : _fieldTranslations$cu[field]) || field, \":\", field === 'course_name' ? renderSearchAndSelectField(field, data.courses.map(c => ({\n            id: c.id,\n            name: c.title\n          }))) : /*#__PURE__*/_jsxDEV(\"input\", {\n            type: field.includes('date') ? 'date' : 'text',\n            name: field,\n            value: editData[field] || '',\n            onChange: e => {\n              const {\n                name,\n                value\n              } = e.target;\n              setEditData(prev => ({\n                ...prev,\n                [name]: value\n              }));\n            },\n            className: \"modal-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 37\n          }, this)]\n        }, field, true, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 25\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"modal-save-button\",\n        onClick: handleSave,\n        children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 191,\n    columnNumber: 9\n  }, this);\n}\n_s(AdminPanel, \"cwLl9N5kSsSmyAIKTJhTDYUyOwI=\", false, function () {\n  return [useNavigate];\n});\n_c = AdminPanel;\nexport default AdminPanel;\nvar _c;\n$RefreshReg$(_c, \"AdminPanel\");","map":{"version":3,"names":["React","useEffect","useState","api","Modal","useNavigate","jsxDEV","_jsxDEV","AdminPanel","_s","data","setData","users","courses","articles","subscriptions","subscriptionTypes","loading","setLoading","error","setError","isModalOpen","setModalOpen","currentEdit","setCurrentEdit","editData","setEditData","isAdding","setIsAdding","navigate","templates","name","email","password","is_active","title","description","price","subscription_type_name","course_name","content","user_name","start_date","end_date","status","fieldTranslations","endpoints","fetchData","responses","Promise","all","Object","entries","map","key","endpoint","get","newData","reduce","acc","res","idx","keys","article","course","find","c","id","course_id","err","logout","localStorage","removeItem","handleAdd","handleEdit","item","handleDelete","delete","response","prev","alert","handleSave","post","put","renderSearchAndSelectField","field","options","filteredOptions","filter","option","toLowerCase","includes","className","children","type","placeholder","value","onChange","e","target","list","fileName","_jsxFileName","lineNumber","columnNumber","onClick","items","user_id","subscription_type_id","isOpen","onClose","_fieldTranslations$cu","_c","$RefreshReg$"],"sources":["/Users/razex/react-frontend/src/pages/AdminPanel.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport api from '../services/api';\nimport Modal from '../components/Modal';\nimport '../styles/AdminPanel.css';\nimport { useNavigate } from 'react-router-dom';\n\nfunction AdminPanel() {\n    const [data, setData] = useState({\n        users: [],\n        courses: [],\n        articles: [],\n        subscriptions: [],\n        subscriptionTypes: [],\n    });\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n\n    const [isModalOpen, setModalOpen] = useState(false);\n    const [currentEdit, setCurrentEdit] = useState(null);\n    const [editData, setEditData] = useState({});\n    const [isAdding, setIsAdding] = useState(false);\n    const navigate = useNavigate();\n\n    const templates = {\n        users: { name: '', email: '', password: '', is_active: true },\n        courses: { title: '', description: '', price: 0, is_active: true, subscription_type_name: '' },\n        articles: { course_name: '', title: '', content: '' },\n        subscriptions: {\n            user_name: '',\n            subscription_type_name: '',\n            start_date: '',\n            end_date: '',\n            status: 'Active',\n        },\n        subscriptionTypes: { name: '', description: '', price: 0, is_active: false },\n    };\n\n    const fieldTranslations = {\n        users: { name: 'Имя', email: 'Электронная почта', password: 'Пароль', is_active: 'Активен' },\n        courses: { title: 'Название', description: 'Описание', price: 'Цена', is_active: 'Активен', subscription_type_name: 'Тип подписки' },\n        articles: { course_name: 'Название курса', title: 'Название статьи', content: 'Содержание' },\n        subscriptions: {\n            user_name: 'Пользователь',\n            subscription_type_name: 'Тип подписки',\n            start_date: 'Дата начала',\n            end_date: 'Дата окончания',\n            status: 'Статус',\n        },\n        subscriptionTypes: { name: 'Название', description: 'Описание', price: 'Цена', is_active: 'Активен' },\n    };\n\n    const endpoints = {\n        users: '/usercus',\n        courses: '/courses',\n        articles: '/articles',\n        subscriptions: '/subscriptions',\n        subscriptionTypes: '/subscription-types',\n    };\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const responses = await Promise.all(\n                    Object.entries(endpoints).map(([key, endpoint]) => api.get(endpoint))\n                );\n\n                const newData = responses.reduce((acc, res, idx) => {\n                    const key = Object.keys(endpoints)[idx];\n                    acc[key] = res.data;\n                    return acc;\n                }, {});\n\n                // Replace course_id with course_name in articles\n                newData.articles = newData.articles.map((article) => {\n                    const course = newData.courses.find((c) => c.id === article.course_id);\n                    return {\n                        ...article,\n                        course_name: course ? course.title : 'Неизвестный курс',\n                    };\n                });\n\n                setData(newData);\n            } catch (err) {\n                setError('Не удалось загрузить данные админ-панели');\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        fetchData();\n    }, []);\n\n    const logout = () => {\n        localStorage.removeItem('authToken');\n        navigate('/login');\n    };\n\n    const handleAdd = (key) => {\n        setIsAdding(true);\n        setCurrentEdit(key);\n        setEditData({ ...templates[key] });\n        setModalOpen(true);\n    };\n\n    const handleEdit = (key, item) => {\n        setIsAdding(false);\n        setCurrentEdit(key);\n        setEditData({ ...item });\n        setModalOpen(true);\n    };\n\n    const handleDelete = async (key, id) => {\n        try {\n            await api.delete(`${endpoints[key]}/${id}`);\n            const response = await api.get(endpoints[key]);\n            setData((prev) => ({\n                ...prev,\n                [key]: response.data,\n            }));\n        } catch (err) {\n            alert('Не удалось удалить элемент');\n        }\n    };\n\n    const handleSave = async () => {\n        try {\n            const endpoint = endpoints[currentEdit];\n\n            if (currentEdit === 'articles') {\n                const course = data.courses.find((c) => c.title === editData.course_name);\n                if (course) editData.course_id = course.id;\n                delete editData.course_name;\n            }\n\n            if (isAdding) {\n                await api.post(endpoint, editData);\n            } else {\n                await api.put(`${endpoint}/${editData.id}`, editData);\n            }\n\n            const response = await api.get(endpoint);\n            setData((prev) => ({\n                ...prev,\n                [currentEdit]: response.data,\n            }));\n\n            alert(isAdding ? 'Элемент успешно добавлен' : 'Изменения успешно сохранены');\n        } catch (err) {\n            alert('Не удалось сохранить изменения');\n        } finally {\n            setModalOpen(false);\n        }\n    };\n\n    const renderSearchAndSelectField = (field, options) => {\n        const filteredOptions = options.filter((option) =>\n            option.name.toLowerCase().includes((editData[field] || '').toLowerCase())\n        );\n\n        return (\n            <div className=\"modal-select-container\">\n                <input\n                    type=\"text\"\n                    placeholder={`Введите или выберите ${field === 'course_name' ? 'курс' : 'значение'}`}\n                    value={editData[field] || ''}\n                    onChange={(e) => {\n                        const { value } = e.target;\n                        setEditData((prev) => ({\n                            ...prev,\n                            [field]: value,\n                        }));\n                    }}\n                    list={`list-${field}`}\n                    className=\"modal-input\"\n                />\n                <datalist id={`list-${field}`}>\n                    {filteredOptions.map((option) => (\n                        <option key={option.id} value={option.name}>\n                            {option.name}\n                        </option>\n                    ))}\n                </datalist>\n            </div>\n        );\n    };\n\n    if (loading) return <div className=\"admin-panel-container\">Загрузка...</div>;\n    if (error) return <div className=\"admin-panel-container\">Ошибка: {error}</div>;\n\n    return (\n        <div className=\"admin-panel-container\">\n            <h1>Админ-панель</h1>\n            <button onClick={logout} className=\"logout-button\">Выйти из аккаунта</button>\n            {Object.entries(data).map(([key, items]) => (\n                <section key={key} className=\"admin-section\">\n                    <h2>\n                        {{\n                            users: 'Пользователи',\n                            courses: 'Курсы',\n                            articles: 'Статьи',\n                            subscriptions: 'Подписки',\n                            subscriptionTypes: 'Типы подписок',\n                        }[key]}\n                    </h2>\n                    <button\n                        className=\"admin-add-button\"\n                        onClick={() => handleAdd(key)}\n                    >\n                        Добавить {{\n                            users: 'пользователя',\n                            courses: 'курс',\n                            articles: 'статью',\n                            subscriptions: 'подписку',\n                            subscriptionTypes: 'тип подписки',\n                        }[key]}\n                    </button>\n                    <ul className=\"admin-list\">\n                        {items.map((item) => (\n                            <li key={item.id} className=\"admin-list-item\">\n                                <span>\n                                    {{\n                                        users: item.name || item.email,\n                                        courses: item.title,\n                                        articles: `${item.course_name} - ${item.title}`,\n                                        subscriptions: `${item.user_name || item.user_id} - ${item.subscription_type_name || item.subscription_type_id} (${item.status})`,\n                                        subscriptionTypes: item.name,\n                                    }[key] || 'Новый элемент'}\n                                </span>\n                                <div className=\"admin-buttons\">\n                                    <button\n                                        className=\"admin-edit-button\"\n                                        onClick={() => handleEdit(key, item)}\n                                    >\n                                        Редактировать\n                                    </button>\n                                    <button\n                                        className=\"admin-delete-button\"\n                                        onClick={() => handleDelete(key, item.id)}\n                                    >\n                                        Удалить\n                                    </button>\n                                </div>\n                            </li>\n                        ))}\n                    </ul>\n                </section>\n            ))}\n\n            <Modal isOpen={isModalOpen} onClose={() => setModalOpen(false)}>\n                <h2>\n                    {isAdding\n                        ? `Добавить ${\n                              {\n                                  users: 'пользователя',\n                                  courses: 'курс',\n                                  articles: 'статью',\n                                  subscriptions: 'подписку',\n                                  subscriptionTypes: 'тип подписки',\n                              }[currentEdit]\n                          }`\n                        : `Редактировать ${\n                              {\n                                  users: 'пользователя',\n                                  courses: 'курс',\n                                  articles: 'статью',\n                                  subscriptions: 'подписку',\n                                  subscriptionTypes: 'тип подписки',\n                              }[currentEdit]\n                          }`}\n                </h2>\n                {editData &&\n                    Object.keys(editData).map((field) => (\n                        <label key={field} className=\"modal-input-label\">\n                            {fieldTranslations[currentEdit]?.[field] || field}:\n                            {field === 'course_name'\n                                ? renderSearchAndSelectField(\n                                      field,\n                                      data.courses.map((c) => ({\n                                          id: c.id,\n                                          name: c.title,\n                                      }))\n                                  )\n                                : (\n                                    <input\n                                        type={field.includes('date') ? 'date' : 'text'}\n                                        name={field}\n                                        value={editData[field] || ''}\n                                        onChange={(e) => {\n                                            const { name, value } = e.target;\n                                            setEditData((prev) => ({\n                                                ...prev,\n                                                [name]: value,\n                                            }));\n                                        }}\n                                        className=\"modal-input\"\n                                    />\n                                )}\n                        </label>\n                    ))}\n                <button className=\"modal-save-button\" onClick={handleSave}>\n                    Сохранить\n                </button>\n            </Modal>\n        </div>\n    );\n}\n\nexport default AdminPanel;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}