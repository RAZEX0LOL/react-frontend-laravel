{"ast":null,"code":"var _jsxFileName = \"/Users/razex/react-frontend/src/pages/AdminPanel.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport api from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AdminPanel() {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [courses, setCourses] = useState([]);\n  const [articles, setArticles] = useState([]);\n  const [subscriptions, setSubscriptions] = useState([]);\n  const [subscriptionTypes, setSubscriptionTypes] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [newUser, setNewUser] = useState({\n    name: '',\n    email: '',\n    is_active: true\n  });\n  const [newCourse, setNewCourse] = useState({\n    title: '',\n    description: '',\n    price: '',\n    is_active: false,\n    is_subscription_based: false\n  });\n  const [newArticle, setNewArticle] = useState({\n    title: '',\n    content: '',\n    course_id: ''\n  });\n  const [newSubscription, setNewSubscription] = useState({\n    user_id: '',\n    subscription_type_id: '',\n    start_date: '',\n    end_date: '',\n    status: 'Active'\n  });\n  const [newSubscriptionType, setNewSubscriptionType] = useState({\n    name: '',\n    description: '',\n    price: '',\n    is_active: true\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const [usersRes, coursesRes, articlesRes, subscriptionsRes, subscriptionTypesRes] = await Promise.all([api.get('/usercus'), api.get('/courses'), api.get('/articles'), api.get('/subscriptions'), api.get('/subscription-types')]);\n        setUsers(usersRes.data);\n        setCourses(coursesRes.data);\n        setArticles(articlesRes.data);\n        setSubscriptions(subscriptionsRes.data);\n        setSubscriptionTypes(subscriptionTypesRes.data);\n      } catch (err) {\n        setError('Failed to load admin data');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n\n  // CRUD Handlers\n  const handleCreateSubscriptionType = async () => {\n    try {\n      const response = await api.post('/subscription-types', newSubscriptionType);\n      setSubscriptionTypes([...subscriptionTypes, response.data]);\n      setNewSubscriptionType({\n        name: '',\n        description: '',\n        price: '',\n        is_active: true\n      });\n    } catch (err) {\n      alert('Failed to create subscription type');\n    }\n  };\n  const handleDeleteSubscriptionType = async id => {\n    try {\n      await api.delete(`/subscription-types/${id}`);\n      setSubscriptionTypes(subscriptionTypes.filter(type => type.id !== id));\n    } catch (err) {\n      alert('Failed to delete subscription type');\n    }\n  };\n  const handleCreateSubscription = async () => {\n    try {\n      const response = await api.post('/subscriptions', newSubscription);\n      setSubscriptions([...subscriptions, response.data]);\n      setNewSubscription({\n        user_id: '',\n        subscription_type_id: '',\n        start_date: '',\n        end_date: '',\n        status: 'Active'\n      });\n    } catch (err) {\n      alert('Failed to create subscription');\n    }\n  };\n  const handleDeleteSubscription = async id => {\n    try {\n      await api.delete(`/subscriptions/${id}`);\n      setSubscriptions(subscriptions.filter(sub => sub.id !== id));\n    } catch (err) {\n      alert('Failed to delete subscription');\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading admin panel...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Admin Panel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Subscription Types\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => {\n        e.preventDefault();\n        handleCreateSubscriptionType();\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newSubscriptionType.name,\n          onChange: e => setNewSubscriptionType({\n            ...newSubscriptionType,\n            name: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Description:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: newSubscriptionType.description,\n          onChange: e => setNewSubscriptionType({\n            ...newSubscriptionType,\n            description: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Price:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: newSubscriptionType.price,\n          onChange: e => setNewSubscriptionType({\n            ...newSubscriptionType,\n            price: parseFloat(e.target.value)\n          }),\n          required: true,\n          min: \"0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Active:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: newSubscriptionType.is_active,\n          onChange: e => setNewSubscriptionType({\n            ...newSubscriptionType,\n            is_active: e.target.checked\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Subscription Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: subscriptionTypes.map(type => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [type.name, \" - $\", type.price, \" - \", type.is_active ? 'Active' : 'Inactive', /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            marginLeft: '10px'\n          },\n          onClick: () => handleDeleteSubscriptionType(type.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 25\n        }, this)]\n      }, type.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Subscriptions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => {\n        e.preventDefault();\n        handleCreateSubscription();\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"User:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: newSubscription.user_id,\n          onChange: e => setNewSubscription({\n            ...newSubscription,\n            user_id: e.target.value\n          }),\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a user\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 25\n          }, this), users.map(user => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: user.id,\n            children: user.name\n          }, user.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Subscription Type:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: newSubscription.subscription_type_id,\n          onChange: e => setNewSubscription({\n            ...newSubscription,\n            subscription_type_id: e.target.value\n          }),\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select a subscription type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 25\n          }, this), subscriptionTypes.map(type => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: type.id,\n            children: type.name\n          }, type.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Start Date:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: newSubscription.start_date,\n          onChange: e => setNewSubscription({\n            ...newSubscription,\n            start_date: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"End Date:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: newSubscription.end_date,\n          onChange: e => setNewSubscription({\n            ...newSubscription,\n            end_date: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Status:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: newSubscription.status,\n          onChange: e => setNewSubscription({\n            ...newSubscription,\n            status: e.target.value\n          }),\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Active\",\n            children: \"Active\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Paused\",\n            children: \"Paused\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Expired\",\n            children: \"Expired\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Subscription\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: subscriptions.map(sub => {\n        var _users$find, _subscriptionTypes$fi;\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"User: \", (_users$find = users.find(u => u.id === sub.user_id)) === null || _users$find === void 0 ? void 0 : _users$find.name, \", Type:\", ' ', (_subscriptionTypes$fi = subscriptionTypes.find(type => type.id === sub.subscription_type_id)) === null || _subscriptionTypes$fi === void 0 ? void 0 : _subscriptionTypes$fi.name, \",\", ' ', \"Status: \", sub.status, /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              marginLeft: '10px'\n            },\n            onClick: () => handleDeleteSubscription(sub.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 25\n          }, this)]\n        }, sub.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 9\n  }, this);\n}\n_s(AdminPanel, \"KIfIZKQc1kU4wGmIIYsZkenl9vU=\");\n_c = AdminPanel;\nexport default AdminPanel;\nvar _c;\n$RefreshReg$(_c, \"AdminPanel\");","map":{"version":3,"names":["React","useEffect","useState","api","jsxDEV","_jsxDEV","AdminPanel","_s","users","setUsers","courses","setCourses","articles","setArticles","subscriptions","setSubscriptions","subscriptionTypes","setSubscriptionTypes","loading","setLoading","error","setError","newUser","setNewUser","name","email","is_active","newCourse","setNewCourse","title","description","price","is_subscription_based","newArticle","setNewArticle","content","course_id","newSubscription","setNewSubscription","user_id","subscription_type_id","start_date","end_date","status","newSubscriptionType","setNewSubscriptionType","fetchData","usersRes","coursesRes","articlesRes","subscriptionsRes","subscriptionTypesRes","Promise","all","get","data","err","handleCreateSubscriptionType","response","post","alert","handleDeleteSubscriptionType","id","delete","filter","type","handleCreateSubscription","handleDeleteSubscription","sub","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","e","preventDefault","value","onChange","target","required","parseFloat","min","checked","map","style","marginLeft","onClick","user","_users$find","_subscriptionTypes$fi","find","u","_c","$RefreshReg$"],"sources":["/Users/razex/react-frontend/src/pages/AdminPanel.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport api from '../services/api';\n\nfunction AdminPanel() {\n    const [users, setUsers] = useState([]);\n    const [courses, setCourses] = useState([]);\n    const [articles, setArticles] = useState([]);\n    const [subscriptions, setSubscriptions] = useState([]);\n    const [subscriptionTypes, setSubscriptionTypes] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n\n    const [newUser, setNewUser] = useState({ name: '', email: '', is_active: true });\n    const [newCourse, setNewCourse] = useState({\n        title: '',\n        description: '',\n        price: '',\n        is_active: false,\n        is_subscription_based: false,\n    });\n    const [newArticle, setNewArticle] = useState({ title: '', content: '', course_id: '' });\n    const [newSubscription, setNewSubscription] = useState({\n        user_id: '',\n        subscription_type_id: '',\n        start_date: '',\n        end_date: '',\n        status: 'Active',\n    });\n    const [newSubscriptionType, setNewSubscriptionType] = useState({\n        name: '',\n        description: '',\n        price: '',\n        is_active: true,\n    });\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const [\n                    usersRes,\n                    coursesRes,\n                    articlesRes,\n                    subscriptionsRes,\n                    subscriptionTypesRes,\n                ] = await Promise.all([\n                    api.get('/usercus'),\n                    api.get('/courses'),\n                    api.get('/articles'),\n                    api.get('/subscriptions'),\n                    api.get('/subscription-types'),\n                ]);\n                setUsers(usersRes.data);\n                setCourses(coursesRes.data);\n                setArticles(articlesRes.data);\n                setSubscriptions(subscriptionsRes.data);\n                setSubscriptionTypes(subscriptionTypesRes.data);\n            } catch (err) {\n                setError('Failed to load admin data');\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        fetchData();\n    }, []);\n\n    // CRUD Handlers\n    const handleCreateSubscriptionType = async () => {\n        try {\n            const response = await api.post('/subscription-types', newSubscriptionType);\n            setSubscriptionTypes([...subscriptionTypes, response.data]);\n            setNewSubscriptionType({\n                name: '',\n                description: '',\n                price: '',\n                is_active: true,\n            });\n        } catch (err) {\n            alert('Failed to create subscription type');\n        }\n    };\n\n    const handleDeleteSubscriptionType = async (id) => {\n        try {\n            await api.delete(`/subscription-types/${id}`);\n            setSubscriptionTypes(subscriptionTypes.filter((type) => type.id !== id));\n        } catch (err) {\n            alert('Failed to delete subscription type');\n        }\n    };\n\n    const handleCreateSubscription = async () => {\n        try {\n            const response = await api.post('/subscriptions', newSubscription);\n            setSubscriptions([...subscriptions, response.data]);\n            setNewSubscription({\n                user_id: '',\n                subscription_type_id: '',\n                start_date: '',\n                end_date: '',\n                status: 'Active',\n            });\n        } catch (err) {\n            alert('Failed to create subscription');\n        }\n    };\n\n    const handleDeleteSubscription = async (id) => {\n        try {\n            await api.delete(`/subscriptions/${id}`);\n            setSubscriptions(subscriptions.filter((sub) => sub.id !== id));\n        } catch (err) {\n            alert('Failed to delete subscription');\n        }\n    };\n\n    if (loading) {\n        return <div>Loading admin panel...</div>;\n    }\n\n    if (error) {\n        return <div>Error: {error}</div>;\n    }\n\n    return (\n        <div>\n            <h1>Admin Panel</h1>\n\n            {/* Subscription Types Section */}\n            <h2>Subscription Types</h2>\n            <form\n                onSubmit={(e) => {\n                    e.preventDefault();\n                    handleCreateSubscriptionType();\n                }}\n            >\n                <label>\n                    Name:\n                    <input\n                        type=\"text\"\n                        value={newSubscriptionType.name}\n                        onChange={(e) =>\n                            setNewSubscriptionType({ ...newSubscriptionType, name: e.target.value })\n                        }\n                        required\n                    />\n                </label>\n                <br />\n                <label>\n                    Description:\n                    <textarea\n                        value={newSubscriptionType.description}\n                        onChange={(e) =>\n                            setNewSubscriptionType({\n                                ...newSubscriptionType,\n                                description: e.target.value,\n                            })\n                        }\n                    />\n                </label>\n                <br />\n                <label>\n                    Price:\n                    <input\n                        type=\"number\"\n                        value={newSubscriptionType.price}\n                        onChange={(e) =>\n                            setNewSubscriptionType({\n                                ...newSubscriptionType,\n                                price: parseFloat(e.target.value),\n                            })\n                        }\n                        required\n                        min=\"0\"\n                    />\n                </label>\n                <br />\n                <label>\n                    Active:\n                    <input\n                        type=\"checkbox\"\n                        checked={newSubscriptionType.is_active}\n                        onChange={(e) =>\n                            setNewSubscriptionType({\n                                ...newSubscriptionType,\n                                is_active: e.target.checked,\n                            })\n                        }\n                    />\n                </label>\n                <br />\n                <button type=\"submit\">Add Subscription Type</button>\n            </form>\n            <ul>\n                {subscriptionTypes.map((type) => (\n                    <li key={type.id}>\n                        {type.name} - ${type.price} - {type.is_active ? 'Active' : 'Inactive'}\n                        <button\n                            style={{ marginLeft: '10px' }}\n                            onClick={() => handleDeleteSubscriptionType(type.id)}\n                        >\n                            Delete\n                        </button>\n                    </li>\n                ))}\n            </ul>\n\n            {/* Subscriptions Section */}\n            <h2>Subscriptions</h2>\n            <form\n                onSubmit={(e) => {\n                    e.preventDefault();\n                    handleCreateSubscription();\n                }}\n            >\n                <label>\n                    User:\n                    <select\n                        value={newSubscription.user_id}\n                        onChange={(e) =>\n                            setNewSubscription({ ...newSubscription, user_id: e.target.value })\n                        }\n                        required\n                    >\n                        <option value=\"\">Select a user</option>\n                        {users.map((user) => (\n                            <option key={user.id} value={user.id}>\n                                {user.name}\n                            </option>\n                        ))}\n                    </select>\n                </label>\n                <br />\n                <label>\n                    Subscription Type:\n                    <select\n                        value={newSubscription.subscription_type_id}\n                        onChange={(e) =>\n                            setNewSubscription({\n                                ...newSubscription,\n                                subscription_type_id: e.target.value,\n                            })\n                        }\n                        required\n                    >\n                        <option value=\"\">Select a subscription type</option>\n                        {subscriptionTypes.map((type) => (\n                            <option key={type.id} value={type.id}>\n                                {type.name}\n                            </option>\n                        ))}\n                    </select>\n                </label>\n                <br />\n                <label>\n                    Start Date:\n                    <input\n                        type=\"date\"\n                        value={newSubscription.start_date}\n                        onChange={(e) =>\n                            setNewSubscription({ ...newSubscription, start_date: e.target.value })\n                        }\n                        required\n                    />\n                </label>\n                <br />\n                <label>\n                    End Date:\n                    <input\n                        type=\"date\"\n                        value={newSubscription.end_date}\n                        onChange={(e) =>\n                            setNewSubscription({ ...newSubscription, end_date: e.target.value })\n                        }\n                        required\n                    />\n                </label>\n                <br />\n                <label>\n                    Status:\n                    <select\n                        value={newSubscription.status}\n                        onChange={(e) =>\n                            setNewSubscription({ ...newSubscription, status: e.target.value })\n                        }\n                        required\n                    >\n                        <option value=\"Active\">Active</option>\n                        <option value=\"Paused\">Paused</option>\n                        <option value=\"Expired\">Expired</option>\n                    </select>\n                </label>\n                <br />\n                <button type=\"submit\">Add Subscription</button>\n            </form>\n            <ul>\n                {subscriptions.map((sub) => (\n                    <li key={sub.id}>\n                        User: {users.find((u) => u.id === sub.user_id)?.name}, Type:{' '}\n                        {subscriptionTypes.find((type) => type.id === sub.subscription_type_id)?.name},{' '}\n                        Status: {sub.status}\n                        <button\n                            style={{ marginLeft: '10px' }}\n                            onClick={() => handleDeleteSubscription(sub.id)}\n                        >\n                            Delete\n                        </button>\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n}\n\nexport default AdminPanel;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}