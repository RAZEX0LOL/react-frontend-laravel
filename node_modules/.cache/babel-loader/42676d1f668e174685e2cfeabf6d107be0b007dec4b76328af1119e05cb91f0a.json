{"ast":null,"code":"var _jsxFileName = \"/Users/razex/react-frontend/src/pages/AdminPanel.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport api from '../services/api';\nimport Modal from '../components/Modal';\nimport '../styles/AdminPanel.css';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AdminPanel() {\n  _s();\n  const [data, setData] = useState({\n    users: [],\n    courses: [],\n    articles: [],\n    subscriptions: [],\n    subscriptionTypes: []\n  });\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [isModalOpen, setModalOpen] = useState(false);\n  const [currentEdit, setCurrentEdit] = useState(null);\n  const [editData, setEditData] = useState({});\n  const [isAdding, setIsAdding] = useState(false);\n  const navigate = useNavigate();\n  const templates = {\n    users: {\n      name: '',\n      email: '',\n      password: '',\n      is_active: true\n    },\n    courses: {\n      title: '',\n      description: '',\n      price: 0,\n      is_active: true,\n      subscription_type_name: '' // Добавлено поле для выбора названия подписки\n    },\n    articles: {\n      course_id: '',\n      title: '',\n      content: ''\n    },\n    subscriptions: {\n      user_name: '',\n      subscription_type_name: '',\n      start_date: '',\n      end_date: '',\n      status: 'Active'\n    },\n    subscriptionTypes: {\n      name: '',\n      description: '',\n      price: 0,\n      is_active: false\n    }\n  };\n  const fieldTranslations = {\n    users: {\n      name: 'Имя',\n      email: 'Электронная почта',\n      password: 'Пароль',\n      is_active: 'Активен'\n    },\n    courses: {\n      title: 'Название',\n      description: 'Описание',\n      price: 'Цена',\n      is_active: 'Активен',\n      subscription_type_name: 'Тип подписки' // Название вместо ID подписки\n    },\n    articles: {\n      course_id: 'ID курса',\n      title: 'Название',\n      content: 'Содержание'\n    },\n    subscriptions: {\n      user_name: 'Пользователь',\n      subscription_type_name: 'Тип подписки',\n      start_date: 'Дата начала',\n      end_date: 'Дата окончания',\n      status: 'Статус'\n    },\n    subscriptionTypes: {\n      name: 'Название',\n      description: 'Описание',\n      price: 'Цена',\n      is_active: 'Активен'\n    }\n  };\n  const endpoints = {\n    users: '/usercus',\n    courses: '/courses',\n    articles: '/articles',\n    subscriptions: '/subscriptions',\n    subscriptionTypes: '/subscription-types'\n  };\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const responses = await Promise.all(Object.entries(endpoints).map(([key, endpoint]) => api.get(endpoint)));\n        const newData = responses.reduce((acc, res, idx) => {\n          const key = Object.keys(endpoints)[idx];\n          acc[key] = res.data;\n          return acc;\n        }, {});\n        setData(newData);\n      } catch (err) {\n        setError('Не удалось загрузить данные админ-панели');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  const logout = () => {\n    localStorage.removeItem('authToken');\n    navigate('/login');\n  };\n  const handleAdd = key => {\n    setIsAdding(true);\n    setCurrentEdit(key);\n    setEditData({\n      ...templates[key]\n    });\n    setModalOpen(true);\n  };\n  const handleEdit = (key, item) => {\n    setIsAdding(false);\n    setCurrentEdit(key);\n    setEditData({\n      ...item\n    });\n    setModalOpen(true);\n  };\n  const handleDelete = async (key, id) => {\n    try {\n      await api.delete(`${endpoints[key]}/${id}`);\n      const response = await api.get(endpoints[key]);\n      setData(prev => ({\n        ...prev,\n        [key]: response.data\n      }));\n    } catch (err) {\n      alert('Не удалось удалить элемент');\n    }\n  };\n  const handleSave = async () => {\n    try {\n      const endpoint = endpoints[currentEdit];\n\n      // Преобразуем название подписки в ID для курса\n      if (currentEdit === 'courses') {\n        const subscriptionType = data.subscriptionTypes.find(type => type.name === editData.subscription_type_name);\n        if (subscriptionType) editData.subscription_id = subscriptionType.id;\n\n        // Удаляем временное поле\n        delete editData.subscription_type_name;\n      }\n      if (isAdding) {\n        await api.post(endpoint, editData);\n      } else {\n        await api.put(`${endpoint}/${editData.id}`, editData);\n      }\n\n      // Повторный запрос данных\n      const response = await api.get(endpoint);\n      setData(prev => ({\n        ...prev,\n        [currentEdit]: response.data\n      }));\n      alert(isAdding ? 'Элемент успешно добавлен' : 'Изменения успешно сохранены');\n    } catch (err) {\n      alert('Не удалось сохранить изменения');\n    } finally {\n      setModalOpen(false);\n    }\n  };\n  const renderSearchAndSelectField = (field, options) => {\n    const filteredOptions = options.filter(option => option.name.toLowerCase().includes((editData[field] || '').toLowerCase()));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-select-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: `Введите или выберите ${field === 'subscription_type_name' ? 'тип подписки' : 'значение'}`,\n        value: editData[field] || '',\n        onChange: e => {\n          const {\n            value\n          } = e.target;\n          setEditData(prev => ({\n            ...prev,\n            [field]: value\n          }));\n        },\n        list: `list-${field}`,\n        className: \"modal-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n        id: `list-${field}`,\n        children: filteredOptions.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: option.name,\n          children: option.name\n        }, option.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }, this);\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-panel-container\",\n    children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 194,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-panel-container\",\n    children: [\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 195,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-panel-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u0410\\u0434\\u043C\\u0438\\u043D-\\u043F\\u0430\\u043D\\u0435\\u043B\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: logout,\n      className: \"logout-button\",\n      children: \"\\u0412\\u044B\\u0439\\u0442\\u0438 \\u0438\\u0437 \\u0430\\u043A\\u043A\\u0430\\u0443\\u043D\\u0442\\u0430\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 13\n    }, this), Object.entries(data).map(([key, items]) => /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"admin-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: {\n          users: 'Пользователи',\n          courses: 'Курсы',\n          articles: 'Статьи',\n          subscriptions: 'Подписки',\n          subscriptionTypes: 'Типы подписок'\n        }[key]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"admin-add-button\",\n        onClick: () => handleAdd(key),\n        children: [\"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \", {\n          users: 'пользователя',\n          courses: 'курс',\n          articles: 'статью',\n          subscriptions: 'подписку',\n          subscriptionTypes: 'тип подписки'\n        }[key]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"admin-list\",\n        children: items.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"admin-list-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: {\n              users: item.name || item.email,\n              courses: `${item.title} - ${item.description} (${item.price})`,\n              articles: `${item.course_name || item.course_id} - ${item.title}`,\n              subscriptions: `${item.user_name || item.user_id} - ${item.subscription_type_name || item.subscription_type_id} (${item.status})`,\n              subscriptionTypes: item.name\n            }[key] || 'Новый элемент'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"admin-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"admin-edit-button\",\n              onClick: () => handleEdit(key, item),\n              children: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"admin-delete-button\",\n              onClick: () => handleDelete(key, item.id),\n              children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 33\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 21\n      }, this)]\n    }, key, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isModalOpen,\n      onClose: () => setModalOpen(false),\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: isAdding ? `Добавить ${{\n          users: 'пользователя',\n          courses: 'курс',\n          articles: 'статью',\n          subscriptions: 'подписку',\n          subscriptionTypes: 'тип подписки'\n        }[currentEdit]}` : `Редактировать ${{\n          users: 'пользователя',\n          courses: 'курс',\n          articles: 'статью',\n          subscriptions: 'подписку',\n          subscriptionTypes: 'тип подписки'\n        }[currentEdit]}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 17\n      }, this), editData && Object.keys(editData).map(field => {\n        var _fieldTranslations$cu;\n        return /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"modal-input-label\",\n          children: [((_fieldTranslations$cu = fieldTranslations[currentEdit]) === null || _fieldTranslations$cu === void 0 ? void 0 : _fieldTranslations$cu[field]) || field, \":\", field === 'subscription_type_name' ? renderSearchAndSelectField(field, data.subscriptionTypes.map(s => ({\n            id: s.id,\n            name: s.name\n          }))) : /*#__PURE__*/_jsxDEV(\"input\", {\n            type: field.includes('date') ? 'date' : 'text',\n            name: field,\n            value: editData[field] || '',\n            onChange: e => {\n              const {\n                name,\n                value\n              } = e.target;\n              setEditData(prev => ({\n                ...prev,\n                [name]: value\n              }));\n            },\n            className: \"modal-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 37\n          }, this)]\n        }, field, true, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 25\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"modal-save-button\",\n        onClick: handleSave,\n        children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 198,\n    columnNumber: 9\n  }, this);\n}\n_s(AdminPanel, \"cwLl9N5kSsSmyAIKTJhTDYUyOwI=\", false, function () {\n  return [useNavigate];\n});\n_c = AdminPanel;\nexport default AdminPanel;\nvar _c;\n$RefreshReg$(_c, \"AdminPanel\");","map":{"version":3,"names":["React","useEffect","useState","api","Modal","useNavigate","jsxDEV","_jsxDEV","AdminPanel","_s","data","setData","users","courses","articles","subscriptions","subscriptionTypes","loading","setLoading","error","setError","isModalOpen","setModalOpen","currentEdit","setCurrentEdit","editData","setEditData","isAdding","setIsAdding","navigate","templates","name","email","password","is_active","title","description","price","subscription_type_name","course_id","content","user_name","start_date","end_date","status","fieldTranslations","endpoints","fetchData","responses","Promise","all","Object","entries","map","key","endpoint","get","newData","reduce","acc","res","idx","keys","err","logout","localStorage","removeItem","handleAdd","handleEdit","item","handleDelete","id","delete","response","prev","alert","handleSave","subscriptionType","find","type","subscription_id","post","put","renderSearchAndSelectField","field","options","filteredOptions","filter","option","toLowerCase","includes","className","children","placeholder","value","onChange","e","target","list","fileName","_jsxFileName","lineNumber","columnNumber","onClick","items","course_name","user_id","subscription_type_id","isOpen","onClose","_fieldTranslations$cu","s","_c","$RefreshReg$"],"sources":["/Users/razex/react-frontend/src/pages/AdminPanel.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport api from '../services/api';\nimport Modal from '../components/Modal';\nimport '../styles/AdminPanel.css';\nimport { useNavigate } from 'react-router-dom';\n\nfunction AdminPanel() {\n    const [data, setData] = useState({\n        users: [],\n        courses: [],\n        articles: [],\n        subscriptions: [],\n        subscriptionTypes: [],\n    });\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n\n    const [isModalOpen, setModalOpen] = useState(false);\n    const [currentEdit, setCurrentEdit] = useState(null);\n    const [editData, setEditData] = useState({});\n    const [isAdding, setIsAdding] = useState(false);\n    const navigate = useNavigate();\n\n    const templates = {\n        users: { name: '', email: '', password: '', is_active: true },\n        courses: {\n            title: '',\n            description: '',\n            price: 0,\n            is_active: true,\n            subscription_type_name: '', // Добавлено поле для выбора названия подписки\n        },\n        articles: { course_id: '', title: '', content: '' },\n        subscriptions: {\n            user_name: '',\n            subscription_type_name: '',\n            start_date: '',\n            end_date: '',\n            status: 'Active',\n        },\n        subscriptionTypes: { name: '', description: '', price: 0, is_active: false },\n    };\n\n    const fieldTranslations = {\n        users: { name: 'Имя', email: 'Электронная почта', password: 'Пароль', is_active: 'Активен' },\n        courses: {\n            title: 'Название',\n            description: 'Описание',\n            price: 'Цена',\n            is_active: 'Активен',\n            subscription_type_name: 'Тип подписки', // Название вместо ID подписки\n        },\n        articles: { course_id: 'ID курса', title: 'Название', content: 'Содержание' },\n        subscriptions: {\n            user_name: 'Пользователь',\n            subscription_type_name: 'Тип подписки',\n            start_date: 'Дата начала',\n            end_date: 'Дата окончания',\n            status: 'Статус',\n        },\n        subscriptionTypes: { name: 'Название', description: 'Описание', price: 'Цена', is_active: 'Активен' },\n    };\n\n    const endpoints = {\n        users: '/usercus',\n        courses: '/courses',\n        articles: '/articles',\n        subscriptions: '/subscriptions',\n        subscriptionTypes: '/subscription-types',\n    };\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const responses = await Promise.all(\n                    Object.entries(endpoints).map(([key, endpoint]) => api.get(endpoint))\n                );\n                const newData = responses.reduce((acc, res, idx) => {\n                    const key = Object.keys(endpoints)[idx];\n                    acc[key] = res.data;\n                    return acc;\n                }, {});\n                setData(newData);\n            } catch (err) {\n                setError('Не удалось загрузить данные админ-панели');\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        fetchData();\n    }, []);\n\n    const logout = () => {\n        localStorage.removeItem('authToken');\n        navigate('/login');\n    };\n\n    const handleAdd = (key) => {\n        setIsAdding(true);\n        setCurrentEdit(key);\n        setEditData({ ...templates[key] });\n        setModalOpen(true);\n    };\n\n    const handleEdit = (key, item) => {\n        setIsAdding(false);\n        setCurrentEdit(key);\n        setEditData({ ...item });\n        setModalOpen(true);\n    };\n\n    const handleDelete = async (key, id) => {\n        try {\n            await api.delete(`${endpoints[key]}/${id}`);\n            const response = await api.get(endpoints[key]);\n            setData((prev) => ({\n                ...prev,\n                [key]: response.data,\n            }));\n        } catch (err) {\n            alert('Не удалось удалить элемент');\n        }\n    };\n\n    const handleSave = async () => {\n        try {\n            const endpoint = endpoints[currentEdit];\n\n            // Преобразуем название подписки в ID для курса\n            if (currentEdit === 'courses') {\n                const subscriptionType = data.subscriptionTypes.find(\n                    (type) => type.name === editData.subscription_type_name\n                );\n                if (subscriptionType) editData.subscription_id = subscriptionType.id;\n\n                // Удаляем временное поле\n                delete editData.subscription_type_name;\n            }\n\n            if (isAdding) {\n                await api.post(endpoint, editData);\n            } else {\n                await api.put(`${endpoint}/${editData.id}`, editData);\n            }\n\n            // Повторный запрос данных\n            const response = await api.get(endpoint);\n            setData((prev) => ({\n                ...prev,\n                [currentEdit]: response.data,\n            }));\n\n            alert(isAdding ? 'Элемент успешно добавлен' : 'Изменения успешно сохранены');\n        } catch (err) {\n            alert('Не удалось сохранить изменения');\n        } finally {\n            setModalOpen(false);\n        }\n    };\n\n    const renderSearchAndSelectField = (field, options) => {\n        const filteredOptions = options.filter((option) =>\n            option.name.toLowerCase().includes((editData[field] || '').toLowerCase())\n        );\n\n        return (\n            <div className=\"modal-select-container\">\n                <input\n                    type=\"text\"\n                    placeholder={`Введите или выберите ${field === 'subscription_type_name' ? 'тип подписки' : 'значение'}`}\n                    value={editData[field] || ''}\n                    onChange={(e) => {\n                        const { value } = e.target;\n                        setEditData((prev) => ({\n                            ...prev,\n                            [field]: value,\n                        }));\n                    }}\n                    list={`list-${field}`}\n                    className=\"modal-input\"\n                />\n                <datalist id={`list-${field}`}>\n                    {filteredOptions.map((option) => (\n                        <option key={option.id} value={option.name}>\n                            {option.name}\n                        </option>\n                    ))}\n                </datalist>\n            </div>\n        );\n    };\n\n    if (loading) return <div className=\"admin-panel-container\">Загрузка...</div>;\n    if (error) return <div className=\"admin-panel-container\">Ошибка: {error}</div>;\n\n    return (\n        <div className=\"admin-panel-container\">\n            <h1>Админ-панель</h1>\n            <button onClick={logout} className=\"logout-button\">Выйти из аккаунта</button>\n            {Object.entries(data).map(([key, items]) => (\n                <section key={key} className=\"admin-section\">\n                    <h2>\n                        {{\n                            users: 'Пользователи',\n                            courses: 'Курсы',\n                            articles: 'Статьи',\n                            subscriptions: 'Подписки',\n                            subscriptionTypes: 'Типы подписок',\n                        }[key]}\n                    </h2>\n                    <button\n                        className=\"admin-add-button\"\n                        onClick={() => handleAdd(key)}\n                    >\n                        Добавить {{\n                            users: 'пользователя',\n                            courses: 'курс',\n                            articles: 'статью',\n                            subscriptions: 'подписку',\n                            subscriptionTypes: 'тип подписки',\n                        }[key]}\n                    </button>\n                    <ul className=\"admin-list\">\n                        {items.map((item) => (\n                            <li key={item.id} className=\"admin-list-item\">\n                                <span>\n                                    {{\n                                        users: item.name || item.email,\n                                        courses: `${item.title} - ${item.description} (${item.price})`,\n                                        articles: `${item.course_name || item.course_id} - ${item.title}`,\n                                        subscriptions: `${item.user_name || item.user_id} - ${item.subscription_type_name || item.subscription_type_id} (${item.status})`,\n                                        subscriptionTypes: item.name,\n                                    }[key] || 'Новый элемент'}\n                                </span>\n                                <div className=\"admin-buttons\">\n                                    <button\n                                        className=\"admin-edit-button\"\n                                        onClick={() => handleEdit(key, item)}\n                                    >\n                                        Редактировать\n                                    </button>\n                                    <button\n                                        className=\"admin-delete-button\"\n                                        onClick={() => handleDelete(key, item.id)}\n                                    >\n                                        Удалить\n                                    </button>\n                                </div>\n                            </li>\n                        ))}\n                    </ul>\n                </section>\n            ))}\n\n            <Modal isOpen={isModalOpen} onClose={() => setModalOpen(false)}>\n                <h2>\n                    {isAdding\n                        ? `Добавить ${\n                              {\n                                  users: 'пользователя',\n                                  courses: 'курс',\n                                  articles: 'статью',\n                                  subscriptions: 'подписку',\n                                  subscriptionTypes: 'тип подписки',\n                              }[currentEdit]\n                          }`\n                        : `Редактировать ${\n                              {\n                                  users: 'пользователя',\n                                  courses: 'курс',\n                                  articles: 'статью',\n                                  subscriptions: 'подписку',\n                                  subscriptionTypes: 'тип подписки',\n                              }[currentEdit]\n                          }`}\n                </h2>\n                {editData &&\n                    Object.keys(editData).map((field) => (\n                        <label key={field} className=\"modal-input-label\">\n                            {fieldTranslations[currentEdit]?.[field] || field}:\n                            {field === 'subscription_type_name'\n                                ? renderSearchAndSelectField(\n                                      field,\n                                      data.subscriptionTypes.map((s) => ({\n                                          id: s.id,\n                                          name: s.name,\n                                      }))\n                                  )\n                                : (\n                                    <input\n                                        type={field.includes('date') ? 'date' : 'text'}\n                                        name={field}\n                                        value={editData[field] || ''}\n                                        onChange={(e) => {\n                                            const { name, value } = e.target;\n                                            setEditData((prev) => ({\n                                                ...prev,\n                                                [name]: value,\n                                            }));\n                                        }}\n                                        className=\"modal-input\"\n                                    />\n                                )}\n                        </label>\n                    ))}\n                <button className=\"modal-save-button\" onClick={handleSave}>\n                    Сохранить\n                </button>\n            </Modal>\n        </div>\n    );\n}\n\nexport default AdminPanel;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}