{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: 'https://fucklaravel.ru/api',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Добавление токена в заголовок\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('authToken');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => Promise.reject(error));\n\n// Универсальные методы CRUD\nconst fetchAll = endpoint => api.get(endpoint);\nconst fetchById = (endpoint, id) => api.get(`${endpoint}/${id}`);\nconst createItem = (endpoint, data) => api.post(endpoint, data);\nconst updateItem = (endpoint, id, data) => api.put(`${endpoint}/${id}`, data);\nconst deleteItem = (endpoint, id) => api.delete(`${endpoint}/${id}`);\n\n// Методы для аутентификации\nexport const login = (email, password) => api.post('/access-token', {\n  email,\n  password\n});\nexport const register = (name, email, password) => createItem('/usercus', {\n  name,\n  email,\n  password\n});\n\n// Статьи\nexport const fetchArticles = () => fetchAll('/articles');\nexport const createArticle = data => createItem('/articles', data);\nexport const updateArticle = (id, data) => updateItem('/articles', id, data);\nexport const deleteArticle = id => deleteItem('/articles', id);\n\n// Курсы\nexport const fetchCourses = () => fetchAll('/courses');\nexport const createCourse = data => createItem('/courses', data);\nexport const updateCourse = (id, data) => updateItem('/courses', id, data);\nexport const deleteCourse = id => deleteItem('/courses', id);\n\n// Покупки курсов\nexport const fetchCoursePurchases = () => fetchAll('/course-purchases');\nexport const createCoursePurchase = data => createItem('/course-purchases', data);\nexport const deleteCoursePurchase = id => deleteItem('/course-purchases', id);\n\n// Скидки\nexport const fetchDiscounts = () => fetchAll('/discounts');\nexport const createDiscount = data => createItem('/discounts', data);\nexport const updateDiscount = (id, data) => updateItem('/discounts', id, data);\nexport const deleteDiscount = id => deleteItem('/discounts', id);\n\n// Платежи\nexport const fetchPayments = () => fetchAll('/payments');\nexport const createPayment = data => createItem('/payments', data);\nexport const deletePayment = id => deleteItem('/payments', id);\n\n// Отмены подписок\nexport const fetchSubscriptionCancellations = () => fetchAll('/subscription-cancellations');\nexport const createSubscriptionCancellation = data => createItem('/subscription-cancellations', data);\nexport const deleteSubscriptionCancellation = id => deleteItem('/subscription-cancellations', id);\n\n// Подписки\nexport const fetchSubscriptions = () => fetchAll('/subscriptions');\nexport const createSubscription = data => createItem('/subscriptions', data);\nexport const updateSubscription = (id, data) => updateItem('/subscriptions', id, data);\nexport const deleteSubscription = id => deleteItem('/subscriptions', id);\n\n// Типы подписок\nexport const fetchSubscriptionTypes = () => fetchAll('/subscription-types');\nexport const createSubscriptionType = data => createItem('/subscription-types', data);\nexport const updateSubscriptionType = (id, data) => updateItem('/subscription-types', id, data);\nexport const deleteSubscriptionType = id => deleteItem('/subscription-types', id);\n\n// Пользователи\nexport const fetchUsers = () => fetchAll('/usercus');\nexport const createUser = data => createItem('/usercus', data);\nexport const updateUser = (id, data) => updateItem('/usercus', id, data);\nexport const deleteUser = id => deleteItem('/usercus', id);\n\n// Экспорт по умолчанию API\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","fetchAll","endpoint","get","fetchById","id","createItem","data","post","updateItem","put","deleteItem","delete","login","email","password","register","name","fetchArticles","createArticle","updateArticle","deleteArticle","fetchCourses","createCourse","updateCourse","deleteCourse","fetchCoursePurchases","createCoursePurchase","deleteCoursePurchase","fetchDiscounts","createDiscount","updateDiscount","deleteDiscount","fetchPayments","createPayment","deletePayment","fetchSubscriptionCancellations","createSubscriptionCancellation","deleteSubscriptionCancellation","fetchSubscriptions","createSubscription","updateSubscription","deleteSubscription","fetchSubscriptionTypes","createSubscriptionType","updateSubscriptionType","deleteSubscriptionType","fetchUsers","createUser","updateUser","deleteUser"],"sources":["/Users/razex/react-frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst api = axios.create({\n    baseURL: 'https://fucklaravel.ru/api',\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\n// Добавление токена в заголовок\napi.interceptors.request.use(\n    (config) => {\n        const token = localStorage.getItem('authToken');\n        if (token) {\n            config.headers.Authorization = `Bearer ${token}`;\n        }\n        return config;\n    },\n    (error) => Promise.reject(error)\n);\n\n// Универсальные методы CRUD\nconst fetchAll = (endpoint) => api.get(endpoint);\nconst fetchById = (endpoint, id) => api.get(`${endpoint}/${id}`);\nconst createItem = (endpoint, data) => api.post(endpoint, data);\nconst updateItem = (endpoint, id, data) => api.put(`${endpoint}/${id}`, data);\nconst deleteItem = (endpoint, id) => api.delete(`${endpoint}/${id}`);\n\n// Методы для аутентификации\nexport const login = (email, password) => api.post('/access-token', { email, password });\nexport const register = (name, email, password) => createItem('/usercus', { name, email, password });\n\n// Статьи\nexport const fetchArticles = () => fetchAll('/articles');\nexport const createArticle = (data) => createItem('/articles', data);\nexport const updateArticle = (id, data) => updateItem('/articles', id, data);\nexport const deleteArticle = (id) => deleteItem('/articles', id);\n\n// Курсы\nexport const fetchCourses = () => fetchAll('/courses');\nexport const createCourse = (data) => createItem('/courses', data);\nexport const updateCourse = (id, data) => updateItem('/courses', id, data);\nexport const deleteCourse = (id) => deleteItem('/courses', id);\n\n// Покупки курсов\nexport const fetchCoursePurchases = () => fetchAll('/course-purchases');\nexport const createCoursePurchase = (data) => createItem('/course-purchases', data);\nexport const deleteCoursePurchase = (id) => deleteItem('/course-purchases', id);\n\n// Скидки\nexport const fetchDiscounts = () => fetchAll('/discounts');\nexport const createDiscount = (data) => createItem('/discounts', data);\nexport const updateDiscount = (id, data) => updateItem('/discounts', id, data);\nexport const deleteDiscount = (id) => deleteItem('/discounts', id);\n\n// Платежи\nexport const fetchPayments = () => fetchAll('/payments');\nexport const createPayment = (data) => createItem('/payments', data);\nexport const deletePayment = (id) => deleteItem('/payments', id);\n\n// Отмены подписок\nexport const fetchSubscriptionCancellations = () => fetchAll('/subscription-cancellations');\nexport const createSubscriptionCancellation = (data) => createItem('/subscription-cancellations', data);\nexport const deleteSubscriptionCancellation = (id) => deleteItem('/subscription-cancellations', id);\n\n// Подписки\nexport const fetchSubscriptions = () => fetchAll('/subscriptions');\nexport const createSubscription = (data) => createItem('/subscriptions', data);\nexport const updateSubscription = (id, data) => updateItem('/subscriptions', id, data);\nexport const deleteSubscription = (id) => deleteItem('/subscriptions', id);\n\n// Типы подписок\nexport const fetchSubscriptionTypes = () => fetchAll('/subscription-types');\nexport const createSubscriptionType = (data) => createItem('/subscription-types', data);\nexport const updateSubscriptionType = (id, data) => updateItem('/subscription-types', id, data);\nexport const deleteSubscriptionType = (id) => deleteItem('/subscription-types', id);\n\n// Пользователи\nexport const fetchUsers = () => fetchAll('/usercus');\nexport const createUser = (data) => createItem('/usercus', data);\nexport const updateUser = (id, data) => updateItem('/usercus', id, data);\nexport const deleteUser = (id) => deleteItem('/usercus', id);\n\n// Экспорт по умолчанию API\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}